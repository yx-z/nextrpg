window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "nextrpg", "modulename": "nextrpg", "kind": "module", "doc": "<p>Build your next RPG (Role Playing Game).</p>\n"}, {"fullname": "nextrpg.character", "modulename": "nextrpg.character", "kind": "module", "doc": "<p>Characters modules related to moving objects in the game.</p>\n"}, {"fullname": "nextrpg.character.character_drawing", "modulename": "nextrpg.character.character_drawing", "kind": "module", "doc": "<p>Character drawing interface.</p>\n"}, {"fullname": "nextrpg.character.character_drawing.CharacterDrawing", "modulename": "nextrpg.character.character_drawing", "qualname": "CharacterDrawing", "kind": "class", "doc": "<p>Interface for drawing characters on screen.</p>\n\n<p>Provides abstract methods for rendering character animations and handling\ncharacter movement visualization on the screen.</p>\n", "bases": "abc.ABC"}, {"fullname": "nextrpg.character.character_drawing.CharacterDrawing.direction", "modulename": "nextrpg.character.character_drawing", "qualname": "CharacterDrawing.direction", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Direction"}, {"fullname": "nextrpg.character.character_drawing.CharacterDrawing.drawing", "modulename": "nextrpg.character.character_drawing", "qualname": "CharacterDrawing.drawing", "kind": "variable", "doc": "<p>Get the character drawing.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing</code>: The character drawing.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Drawing"}, {"fullname": "nextrpg.character.character_drawing.CharacterDrawing.turn", "modulename": "nextrpg.character.character_drawing", "qualname": "CharacterDrawing.turn", "kind": "function", "doc": "<p>Turn the character to face a specified direction.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>direction</code>:</strong>  Turn the character facing to this direction.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterDrawing</code>: The updated drawing.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Direction</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.character_drawing.CharacterDrawing.move", "modulename": "nextrpg.character.character_drawing", "qualname": "CharacterDrawing.move", "kind": "function", "doc": "<p>Update the character's position based on movement over\nthe given time delta.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The amount of time that has passed since the\nlast update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterDrawing</code>: The updated drawing with a new position.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.character_drawing.CharacterDrawing.idle", "modulename": "nextrpg.character.character_drawing", "qualname": "CharacterDrawing.idle", "kind": "function", "doc": "<p>Update the character's idle animation state over the given time delta.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The amount of time that has passed since the\nlast update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterDrawing</code>: The updated drawing with\n      a new idle animation state.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.character_on_screen", "modulename": "nextrpg.character.character_on_screen", "kind": "module", "doc": "<p>Handles character movement and collision detection.</p>\n"}, {"fullname": "nextrpg.character.character_on_screen.logger", "modulename": "nextrpg.character.character_on_screen", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "Logger(component=&#x27;CharacterOnScreen&#x27;)"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen", "kind": "class", "doc": "<p>Represents a character that can be displayed and moved on screen.</p>\n\n<p>Handles character movement, collision detection, and event processing for\ncharacter interactions with the game environment.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>character_drawing</code>:</strong>  The visual representation of the character.</li>\n<li><strong><code>coordinate</code>:</strong>  The current position of the character on screen.</li>\n<li><strong><code>speed</code>:</strong>  Movement speed of the character in pixels.</li>\n<li><strong><code>collisions</code>:</strong>  List of polygons representing collision boundaries.</li>\n</ul>\n", "bases": "abc.ABC"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.character", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.character", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.character_drawing.CharacterDrawing"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.coordinate", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.coordinate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.draw_on_screen", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.draw_on_screen", "kind": "variable", "doc": "<p>Creates drawable representations of the character and visuals.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterAndVisuals</code>: A tuple containing the character's drawable\n  representation and any associated visual elements.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.DrawOnScreen"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.event", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.event", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>e:</strong> </li>\n</ul>\n\n<p>Returns:</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_on_screen</span><span class=\"o\">.</span><span class=\"n\">CharacterOnScreen</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.tick", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.tick", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>time_delta:</strong> </li>\n</ul>\n\n<p>Returns:</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_on_screen</span><span class=\"o\">.</span><span class=\"n\">CharacterOnScreen</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.character_on_screen.MovingCharacterOnScreen", "modulename": "nextrpg.character.character_on_screen", "qualname": "MovingCharacterOnScreen", "kind": "class", "doc": "<p></p>\n", "bases": "CharacterOnScreen"}, {"fullname": "nextrpg.character.character_on_screen.MovingCharacterOnScreen.collisions", "modulename": "nextrpg.character.character_on_screen", "qualname": "MovingCharacterOnScreen.collisions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[nextrpg.draw_on_screen.Polygon]"}, {"fullname": "nextrpg.character.character_on_screen.MovingCharacterOnScreen.move_speed", "modulename": "nextrpg.character.character_on_screen", "qualname": "MovingCharacterOnScreen.move_speed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.PixelPerMillisecond"}, {"fullname": "nextrpg.character.character_on_screen.MovingCharacterOnScreen.is_moving", "modulename": "nextrpg.character.character_on_screen", "qualname": "MovingCharacterOnScreen.is_moving", "kind": "variable", "doc": "<p>Get whether the character is currently moving.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: Whether the character is currently moving.</p>\n</blockquote>\n", "annotation": ": bool"}, {"fullname": "nextrpg.character.character_on_screen.MovingCharacterOnScreen.move", "modulename": "nextrpg.character.character_on_screen", "qualname": "MovingCharacterOnScreen.move", "kind": "function", "doc": "<p>Move the character based on the current speed and time delta.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since the last update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The updated character position after the move step.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.character_on_screen.MovingCharacterOnScreen.tick", "modulename": "nextrpg.character.character_on_screen", "qualname": "MovingCharacterOnScreen.tick", "kind": "function", "doc": "<p>Update the character's state for a single game step/frame.</p>\n\n<p>Calculates movement based on currently pressed keys, handles collision\ndetection, and updates the character's drawing state (moving or idle).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since\nthe last update, used for calculating movement distance.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterOnScreen</code>: The updated character state after the step.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_on_screen</span><span class=\"o\">.</span><span class=\"n\">CharacterOnScreen</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.npc_on_screen", "modulename": "nextrpg.character.npc_on_screen", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.character.npc_on_screen.StaticNpcOnScreen", "modulename": "nextrpg.character.npc_on_screen", "qualname": "StaticNpcOnScreen", "kind": "class", "doc": "<p></p>\n", "bases": "nextrpg.character.character_on_screen.CharacterOnScreen"}, {"fullname": "nextrpg.character.npc_on_screen.MovingNpcOnScreen", "modulename": "nextrpg.character.npc_on_screen", "qualname": "MovingNpcOnScreen", "kind": "class", "doc": "<p></p>\n", "bases": "nextrpg.character.character_on_screen.MovingCharacterOnScreen"}, {"fullname": "nextrpg.character.npc_on_screen.MovingNpcOnScreen.path", "modulename": "nextrpg.character.npc_on_screen", "qualname": "MovingNpcOnScreen.path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.draw_on_screen.Polygon"}, {"fullname": "nextrpg.character.npc_on_screen.MovingNpcOnScreen.idle_duration", "modulename": "nextrpg.character.npc_on_screen", "qualname": "MovingNpcOnScreen.idle_duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond"}, {"fullname": "nextrpg.character.npc_on_screen.MovingNpcOnScreen.is_moving", "modulename": "nextrpg.character.npc_on_screen", "qualname": "MovingNpcOnScreen.is_moving", "kind": "variable", "doc": "<p>Get whether the character is currently moving.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: Whether the character is currently moving.</p>\n</blockquote>\n", "annotation": ": bool"}, {"fullname": "nextrpg.character.npc_on_screen.MovingNpcOnScreen.move", "modulename": "nextrpg.character.npc_on_screen", "qualname": "MovingNpcOnScreen.move", "kind": "function", "doc": "<p>Move the character based on the current speed and time delta.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since the last update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The updated character position after the move step.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.player_on_screen", "modulename": "nextrpg.character.player_on_screen", "kind": "module", "doc": "<p>Handles character movement and collision detection.</p>\n"}, {"fullname": "nextrpg.character.player_on_screen.PlayerOnScreen", "modulename": "nextrpg.character.player_on_screen", "qualname": "PlayerOnScreen", "kind": "class", "doc": "<p></p>\n", "bases": "nextrpg.character.character_on_screen.MovingCharacterOnScreen"}, {"fullname": "nextrpg.character.player_on_screen.PlayerOnScreen.__init__", "modulename": "nextrpg.character.player_on_screen", "qualname": "PlayerOnScreen.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">character</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>,</span><span class=\"param\">\t<span class=\"n\">coordinate</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>,</span><span class=\"param\">\t<span class=\"n\">collisions</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Polygon</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">move_speed</span><span class=\"p\">:</span> <span class=\"n\">PixelPerMillisecond</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">_movement_keys</span><span class=\"p\">:</span> <span class=\"nb\">frozenset</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">KeyboardKey</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.character.player_on_screen.PlayerOnScreen.event", "modulename": "nextrpg.character.player_on_screen", "qualname": "PlayerOnScreen.event", "kind": "function", "doc": "<p>Process a pygame event and update the character state accordingly.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>e</code>:</strong>  The event to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterOnScreen</code>: The updated character state\n      after processing the event.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_on_screen</span><span class=\"o\">.</span><span class=\"n\">CharacterOnScreen</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.player_on_screen.PlayerOnScreen.is_moving", "modulename": "nextrpg.character.player_on_screen", "qualname": "PlayerOnScreen.is_moving", "kind": "variable", "doc": "<p>Get whether the character is currently moving.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: Whether the character is currently moving.</p>\n</blockquote>\n", "annotation": ": bool"}, {"fullname": "nextrpg.character.player_on_screen.PlayerOnScreen.move", "modulename": "nextrpg.character.player_on_screen", "qualname": "PlayerOnScreen.move", "kind": "function", "doc": "<p>Move the character based on the current speed and time delta.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since the last update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The updated character position after the move step.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing", "modulename": "nextrpg.character.rpg_maker_character_drawing", "kind": "module", "doc": "<p>RPG Maker character drawing implementation.</p>\n\n<p>This module provides functionality for rendering RPG Maker-style character\ndrawing with support for different sprite sheet formats and animation patterns.</p>\n\n<p>Note that <code>nextrpg</code> is only compatible with the\nRPG Maker character sprite sheet to be able to re-use existing resources.</p>\n\n<p>However, using RPG Maker's\n<a href=\"https://www.rpgmakerweb.com/run-time-package\">Runtime Time Package (RTP)</a>\nin non-RPG Maker framework violates the license of RPG Maker,\neven if you own a copy of RPG Maker.</p>\n"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.DefaultFrameType", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "DefaultFrameType", "kind": "class", "doc": "<p>RPG Maker VX/VX Ace/MV/MZ sprite sheet format (4 direction x 3 frames).</p>\n", "bases": "enum.IntEnum"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.XpFrameType", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "XpFrameType", "kind": "class", "doc": "<p>RPG Maker XP sprite sheet format (4 direction x 4 frames).</p>\n", "bases": "enum.IntEnum"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.FrameType", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "FrameType", "kind": "variable", "doc": "<p>Choose between DefaultFrameType and XpFrameType.</p>\n", "default_value": "type[nextrpg.character.rpg_maker_character_drawing.DefaultFrameType | nextrpg.character.rpg_maker_character_drawing.XpFrameType]"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheetSelection", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheetSelection", "kind": "class", "doc": "<p>Zero-indexed row/column for selecting a portion of a sprite sheet.</p>\n\n<p>Defines the position and boundaries for extracting a specific character\nsprite sheet from a larger sprite sheet containing multiple characters.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>row</code>:</strong>  Row index of the character in the sprite sheet.</li>\n<li><strong><code>column</code>:</strong>  Column index of the character in the sprite sheet.</li>\n<li><strong><code>max_rows</code>:</strong>  Total number of rows in the sprite sheet.\nDefault to two rows.</li>\n<li><strong><code>max_columns</code>:</strong>  Total number of columns in the sprite sheet.\nDefault to four columns.</li>\n</ul>\n"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheetSelection.__init__", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheetSelection.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">row</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">column</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">max_rows</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">max_columns</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span></span>)</span>"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheetSelection.row", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheetSelection.row", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheetSelection.column", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheetSelection.column", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheetSelection.max_rows", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheetSelection.max_rows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheetSelection.max_columns", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheetSelection.max_columns", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.Margin", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "Margin", "kind": "class", "doc": "<p>Margin of a single character frame to crop from the sprite sheet.</p>\n"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.Margin.__init__", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "Margin.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">top</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">bottom</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.Margin.top", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "Margin.top", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Pixel", "default_value": "0"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.Margin.left", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "Margin.left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Pixel", "default_value": "0"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.Margin.bottom", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "Margin.bottom", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Pixel", "default_value": "0"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.Margin.right", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "Margin.right", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Pixel", "default_value": "0"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheet", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheet", "kind": "class", "doc": "<p>Container for sprite sheet configuration.</p>\n\n<p>Holds all necessary information to process and render character\nfrom a sprite sheet image.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>drawing</code>:</strong>  The sprite sheet image to process.</li>\n<li><strong><code>selection</code>:</strong>  Optional for selecting a portion of the sprite sheet.</li>\n<li><strong><code>style</code>:</strong>  The sprite sheet format style to use.</li>\n</ul>\n"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheet.__init__", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">drawing</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span>,</span><span class=\"param\">\t<span class=\"n\">selection</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">rpg_maker_character_drawing</span><span class=\"o\">.</span><span class=\"n\">SpriteSheetSelection</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">style</span><span class=\"p\">:</span> <span class=\"n\">FrameType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">enum</span> <span class=\"s1\">&#39;DefaultFrameType&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">rpg_maker_character_drawing</span><span class=\"o\">.</span><span class=\"n\">Margin</span> <span class=\"o\">=</span> <span class=\"n\">Margin</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">left</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">bottom</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span></span>)</span>"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheet.drawing", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheet.drawing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.draw_on_screen.Drawing"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheet.selection", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheet.selection", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.rpg_maker_character_drawing.SpriteSheetSelection | None", "default_value": "None"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheet.style", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheet.style", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.rpg_maker_character_drawing.FrameType", "default_value": "&lt;enum &#x27;DefaultFrameType&#x27;&gt;"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.SpriteSheet.margin", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "SpriteSheet.margin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.rpg_maker_character_drawing.Margin", "default_value": "Margin(top=0, left=0, bottom=0, right=0)"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing", "kind": "class", "doc": "<p>RPG Maker style character drawing.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>sprite_sheet</code>:</strong>  Configuration for the character's sprite sheet.</li>\n<li><strong><code>animate_on_idle</code>:</strong>  Whether to animate the character when not moving.</li>\n<li><strong><code>frame_duration</code>:</strong>  Duration for each animation frame in milliseconds.\nIf not specified, the default duration from <code>Config</code> is used.</li>\n<li><strong><code>initial_direction</code>:</strong>  Initial direction for the character.\nIf not specified, the default direction from <code>Config</code> is used.</li>\n</ul>\n", "bases": "nextrpg.character.character_drawing.CharacterDrawing"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing.__init__", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Direction</span>,</span><span class=\"param\">\t<span class=\"n\">sprite_sheet</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">rpg_maker_character_drawing</span><span class=\"o\">.</span><span class=\"n\">SpriteSheet</span>,</span><span class=\"param\">\t<span class=\"n\">animate_on_idle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">frame_duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">_frames</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Direction</span><span class=\"p\">,</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">CyclicFrames</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing.sprite_sheet", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing.sprite_sheet", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.rpg_maker_character_drawing.SpriteSheet"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing.animate_on_idle", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing.animate_on_idle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing.frame_duration", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing.frame_duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing.drawing", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing.drawing", "kind": "variable", "doc": "<p>Get the current visual representation of the character.</p>\n\n<p>Retrieves the current animation frame for the character's current\ndirection, adjusting diagonal directions to their closest cardinal\ndirection.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing</code>: The current frame of the character's sprite animation.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Drawing"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing.turn", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing.turn", "kind": "function", "doc": "<p>Change the character's facing direction.</p>\n\n<p>Creates a new character drawing with the specified direction and resets\nanimation frames for all directions except the new one.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>direction</code>:</strong>  The new direction for the character to face.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterDrawing</code>: A new character drawing instance facing the\n  specified direction.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Direction</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing.move", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing.move", "kind": "function", "doc": "<p>Update the character's movement animation over the given time delta.</p>\n\n<p>Advances the animation frames for the current direction while leaving\nother direction frames unchanged.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The amount of time that has\npassed since the last update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterDrawing</code>: The updated drawing with a new animation state\n  for the current direction.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.rpg_maker_character_drawing.RpgMakerCharacterDrawing.idle", "modulename": "nextrpg.character.rpg_maker_character_drawing", "qualname": "RpgMakerCharacterDrawing.idle", "kind": "function", "doc": "<p>Update the character's idle animation state over the given time delta.</p>\n\n<p>If animate_on_idle is enabled, continues cycling through animation\nframes even when idle.\nOtherwise, resets all frames to their initial state.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The amount of time that has passed\nsince the last update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CharacterDrawing</code>: The updated drawing\n  with a new idle animation state.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.config", "modulename": "nextrpg.config", "kind": "module", "doc": "<p>Various configurations for <code>nextrpg</code>.\nYou can either use the implicit, default configuration\nor pass the customized instance to <code>nextrpg.start_game.start_game</code>.</p>\n"}, {"fullname": "nextrpg.config.LogLevel", "modulename": "nextrpg.config", "qualname": "LogLevel", "kind": "class", "doc": "<p></p>\n", "bases": "enum.IntEnum"}, {"fullname": "nextrpg.config.LogLevel.DEBUG", "modulename": "nextrpg.config", "qualname": "LogLevel.DEBUG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LogLevel.DEBUG: 1&gt;"}, {"fullname": "nextrpg.config.LogLevel.INFO", "modulename": "nextrpg.config", "qualname": "LogLevel.INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LogLevel.INFO: 2&gt;"}, {"fullname": "nextrpg.config.LogLevel.WARNING", "modulename": "nextrpg.config", "qualname": "LogLevel.WARNING", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LogLevel.WARNING: 3&gt;"}, {"fullname": "nextrpg.config.LogLevel.ERROR", "modulename": "nextrpg.config", "qualname": "LogLevel.ERROR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;LogLevel.ERROR: 4&gt;"}, {"fullname": "nextrpg.config.DebugConfig", "modulename": "nextrpg.config", "qualname": "DebugConfig", "kind": "class", "doc": "<p>Configuration class for debugging purposes.</p>\n\n<p>This config is used by <code>nextrpg.draw_on_screen.Drawing</code>\nfor debug visualization and by collision detection systems to\nhighlight collision areas.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>drawing_background_color</code>:</strong>  The background color used for debug drawing.\nDefault is semi-transparent blue (0, 0, 255, 32).</li>\n<li><strong><code>collision_rectangle_color</code>:</strong>  The color used to highlight collision areas\nwhen debugging is enabled.\nDefault is semi-transparent red (255, 0, 0, 96).</li>\n<li><strong><code>ignore_map_collisions</code>:</strong>  If <code>True</code>, the player can move freely on maps,\nignoring collision areas. Default is <code>False</code>.</li>\n<li><strong><code>log_level</code>:</strong>  The minimum level of log messages to display.</li>\n<li><strong><code>log_duration</code>:</strong>  The default duration of the log message display\nin milliseconds.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.DebugConfig.__init__", "modulename": "nextrpg.config", "qualname": "DebugConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">drawing_background_color</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Rgba</span> <span class=\"o\">=</span> <span class=\"n\">Rgba</span><span class=\"p\">(</span><span class=\"n\">red</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">blue</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">collision_rectangle_color</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Rgba</span> <span class=\"o\">=</span> <span class=\"n\">Rgba</span><span class=\"p\">(</span><span class=\"n\">red</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">blue</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">96</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_map_collisions</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">LogLevel</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">LogLevel</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">log_duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"mi\">3000</span></span>)</span>"}, {"fullname": "nextrpg.config.DebugConfig.drawing_background_color", "modulename": "nextrpg.config", "qualname": "DebugConfig.drawing_background_color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Rgba", "default_value": "Rgba(red=0, green=0, blue=255, alpha=32)"}, {"fullname": "nextrpg.config.DebugConfig.collision_rectangle_color", "modulename": "nextrpg.config", "qualname": "DebugConfig.collision_rectangle_color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Rgba", "default_value": "Rgba(red=255, green=0, blue=0, alpha=96)"}, {"fullname": "nextrpg.config.DebugConfig.ignore_map_collisions", "modulename": "nextrpg.config", "qualname": "DebugConfig.ignore_map_collisions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "nextrpg.config.DebugConfig.log_level", "modulename": "nextrpg.config", "qualname": "DebugConfig.log_level", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.LogLevel", "default_value": "&lt;LogLevel.DEBUG: 1&gt;"}, {"fullname": "nextrpg.config.DebugConfig.log_duration", "modulename": "nextrpg.config", "qualname": "DebugConfig.log_duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond", "default_value": "3000"}, {"fullname": "nextrpg.config.ResizeMode", "modulename": "nextrpg.config", "qualname": "ResizeMode", "kind": "class", "doc": "<p>Resize mode enum.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>SCALE</code>:</strong>  Scale the images to fit the GUI size.</li>\n<li><strong><code>KEEP_NATIVE_SIZE</code>:</strong>  Keep the native image size.</li>\n</ul>\n", "bases": "enum.Enum"}, {"fullname": "nextrpg.config.ResizeMode.SCALE", "modulename": "nextrpg.config", "qualname": "ResizeMode.SCALE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResizeMode.SCALE: 1&gt;"}, {"fullname": "nextrpg.config.ResizeMode.KEEP_NATIVE_SIZE", "modulename": "nextrpg.config", "qualname": "ResizeMode.KEEP_NATIVE_SIZE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResizeMode.KEEP_NATIVE_SIZE: 2&gt;"}, {"fullname": "nextrpg.config.GuiMode", "modulename": "nextrpg.config", "qualname": "GuiMode", "kind": "class", "doc": "<p>Gui mode enum.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>WINDOWED</code>:</strong>  Windowed GUI.</li>\n<li><strong><code>FULL_SCREEN</code>:</strong>  Full screen GUI.</li>\n</ul>\n", "bases": "enum.Enum"}, {"fullname": "nextrpg.config.GuiMode.WINDOWED", "modulename": "nextrpg.config", "qualname": "GuiMode.WINDOWED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;GuiMode.WINDOWED: 1&gt;"}, {"fullname": "nextrpg.config.GuiMode.FULL_SCREEN", "modulename": "nextrpg.config", "qualname": "GuiMode.FULL_SCREEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;GuiMode.FULL_SCREEN: 2&gt;"}, {"fullname": "nextrpg.config.GuiMode.opposite", "modulename": "nextrpg.config", "qualname": "GuiMode.opposite", "kind": "variable", "doc": "<p>Get the opposite gui mode.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>GuiMode</code>: The opposite gui mode.</p>\n</blockquote>\n", "annotation": ": nextrpg.config.GuiMode"}, {"fullname": "nextrpg.config.GuiConfig", "modulename": "nextrpg.config", "qualname": "GuiConfig", "kind": "class", "doc": "<p>Configuration class for Graphical User Interface (GUI).</p>\n\n<p>This is used by <code>nextrpg.gui.Gui</code> to initialize\nthe pygame window and by the rendering system to control display properties.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>title</code>:</strong>  The title of the GUI window.</li>\n<li><strong><code>size</code>:</strong>  The resolution or dimensions of the GUI window defined\nby width and height. This also defines the aspect ratio of the game.</li>\n<li><strong><code>frames_per_second</code>:</strong>  The target frame rate for the application's\nrendering performance.</li>\n<li><strong><code>background_color</code>:</strong>  The background color of the GUI window.</li>\n<li><strong><code>gui_mode</code>:</strong>  Whether to start the game in windowed or full screen mode.</li>\n<li><strong><code>resize_mode</code>:</strong>  Whether to scale the images to fit the GUI size,\nor keep the native image size.</li>\n<li><strong><code>allow_window_resize</code>:</strong>  Whether to allow the user to resize the window\nin windowed mode.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.GuiConfig.__init__", "modulename": "nextrpg.config", "qualname": "GuiConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;nextrpg&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Size</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1280</span><span class=\"p\">,</span> <span class=\"mi\">720</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">frames_per_second</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">background_color</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Rgba</span> <span class=\"o\">=</span> <span class=\"n\">Rgba</span><span class=\"p\">(</span><span class=\"n\">red</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">blue</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">gui_mode</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GuiMode</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">GuiMode</span><span class=\"o\">.</span><span class=\"n\">WINDOWED</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">resize_mode</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">ResizeMode</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">ResizeMode</span><span class=\"o\">.</span><span class=\"n\">SCALE</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">allow_window_resize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "nextrpg.config.GuiConfig.title", "modulename": "nextrpg.config", "qualname": "GuiConfig.title", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;nextrpg&#x27;"}, {"fullname": "nextrpg.config.GuiConfig.size", "modulename": "nextrpg.config", "qualname": "GuiConfig.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Size", "default_value": "(1280, 720)"}, {"fullname": "nextrpg.config.GuiConfig.frames_per_second", "modulename": "nextrpg.config", "qualname": "GuiConfig.frames_per_second", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "60"}, {"fullname": "nextrpg.config.GuiConfig.background_color", "modulename": "nextrpg.config", "qualname": "GuiConfig.background_color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Rgba", "default_value": "Rgba(red=0, green=0, blue=0, alpha=0)"}, {"fullname": "nextrpg.config.GuiConfig.gui_mode", "modulename": "nextrpg.config", "qualname": "GuiConfig.gui_mode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.GuiMode", "default_value": "&lt;GuiMode.WINDOWED: 1&gt;"}, {"fullname": "nextrpg.config.GuiConfig.resize_mode", "modulename": "nextrpg.config", "qualname": "GuiConfig.resize_mode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.ResizeMode", "default_value": "&lt;ResizeMode.SCALE: 1&gt;"}, {"fullname": "nextrpg.config.GuiConfig.allow_window_resize", "modulename": "nextrpg.config", "qualname": "GuiConfig.allow_window_resize", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "nextrpg.config.TileMapConfig", "modulename": "nextrpg.config", "qualname": "TileMapConfig", "kind": "class", "doc": "<p>Configuration class for managing tile map layers and properties,\nthat is created from tmx files <a href=\"https://www.mapeditor.org/\">Tiled</a>.</p>\n\n<p>This config is used by <code>nextrpg.scene.map_scene.MapScene</code>.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>background</code>:</strong>  Class name of the layer to be identified as background layer.</li>\n<li><strong><code>foreground</code>:</strong>  Class name of the layer to be identified as foreground layer.</li>\n<li><strong><code>collision</code>:</strong>  Class name of the objects to be identified as collision objects.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.TileMapConfig.__init__", "modulename": "nextrpg.config", "qualname": "TileMapConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">background</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;background&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">foreground</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;foreground&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">above_character</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;above_character&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">collision</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;collision&#39;</span></span>)</span>"}, {"fullname": "nextrpg.config.TileMapConfig.background", "modulename": "nextrpg.config", "qualname": "TileMapConfig.background", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;background&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig.foreground", "modulename": "nextrpg.config", "qualname": "TileMapConfig.foreground", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;foreground&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig.above_character", "modulename": "nextrpg.config", "qualname": "TileMapConfig.above_character", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;above_character&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig.collision", "modulename": "nextrpg.config", "qualname": "TileMapConfig.collision", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;collision&#x27;"}, {"fullname": "nextrpg.config.CharacterConfig", "modulename": "nextrpg.config", "qualname": "CharacterConfig", "kind": "class", "doc": "<p>Configuration class for characters.</p>\n\n<p>This config is used by <code>nextrpg.character.character.Character</code>.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>move_speed</code>:</strong>  The default speed of the character's movement\nin pixels on screen per physical millisecond.\nThe number of pixels is consumed before screen scaling, if any.</li>\n<li><strong><code>idle_duration</code>:</strong>  The duration of the NPC's idle duration.</li>\n<li><strong><code>directions</code>:</strong>  The set of directions that the player can move.\nDefault to all directions (up, left, right, down, and diagonals).</li>\n</ul>\n"}, {"fullname": "nextrpg.config.CharacterConfig.__init__", "modulename": "nextrpg.config", "qualname": "CharacterConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">move_speed</span><span class=\"p\">:</span> <span class=\"n\">PixelPerMillisecond</span> <span class=\"o\">=</span> <span class=\"mf\">0.25</span>,</span><span class=\"param\">\t<span class=\"n\">idle_duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">directions</span><span class=\"p\">:</span> <span class=\"nb\">frozenset</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Direction</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">frozenset</span><span class=\"p\">({</span><span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP_RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN_RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN_LEFT</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP_LEFT</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">LEFT</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"o\">&gt;</span><span class=\"p\">})</span></span>)</span>"}, {"fullname": "nextrpg.config.CharacterConfig.move_speed", "modulename": "nextrpg.config", "qualname": "CharacterConfig.move_speed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.PixelPerMillisecond", "default_value": "0.25"}, {"fullname": "nextrpg.config.CharacterConfig.idle_duration", "modulename": "nextrpg.config", "qualname": "CharacterConfig.idle_duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond", "default_value": "1000"}, {"fullname": "nextrpg.config.CharacterConfig.directions", "modulename": "nextrpg.config", "qualname": "CharacterConfig.directions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": frozenset[nextrpg.core.Direction]", "default_value": "frozenset({&lt;Direction.UP_RIGHT: 6&gt;, &lt;Direction.DOWN_RIGHT: 8&gt;, &lt;Direction.DOWN_LEFT: 7&gt;, &lt;Direction.UP: 4&gt;, &lt;Direction.UP_LEFT: 5&gt;, &lt;Direction.RIGHT: 3&gt;, &lt;Direction.DOWN: 1&gt;, &lt;Direction.LEFT: 2&gt;})"}, {"fullname": "nextrpg.config.RpgMakerCharacterDrawingConfig", "modulename": "nextrpg.config", "qualname": "RpgMakerCharacterDrawingConfig", "kind": "class", "doc": "<p>Configuration class for RPG Maker character drawings.</p>\n\n<p>This config is used by\n<code>nextrpg.character.rpg_maker_drawing.RpgMakerCharacterDrawing</code>\nto control how character sprites are animated and displayed. It defines the\nanimation timing, idle behavior, and default orientation.</p>\n\n<p>Note that <code>nextrpg</code> is only compatible with the RPG Maker character\nsprite sheet format to be able to re-use existing resources.</p>\n\n<p>However, using RPG Maker's\n<a href=\"https://www.rpgmakerweb.com/run-time-package\">Runtime Time Package (RTP)</a>\nin non-RPG Maker framework violates the license of RPG Maker,\neven if you own a copy of RPG Maker.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>frame_duration</code>:</strong>  The default duration for a single frame for\nthe character.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.RpgMakerCharacterDrawingConfig.__init__", "modulename": "nextrpg.config", "qualname": "RpgMakerCharacterDrawingConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frame_duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"mi\">150</span></span>)</span>"}, {"fullname": "nextrpg.config.RpgMakerCharacterDrawingConfig.frame_duration", "modulename": "nextrpg.config", "qualname": "RpgMakerCharacterDrawingConfig.frame_duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond", "default_value": "150"}, {"fullname": "nextrpg.config.KeyCode", "modulename": "nextrpg.config", "qualname": "KeyCode", "kind": "variable", "doc": "<p>Type alias for keyboard key codes used in pygame.</p>\n\n<p>This type alias represents integer constants that identify specific keys\non the keyboard (like K_LEFT, K_RIGHT, etc.) as defined by pygame.\nThese codes are used in key mapping configurations and event handling.</p>\n", "default_value": "int"}, {"fullname": "nextrpg.config.KeyMappingConfig", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig", "kind": "class", "doc": "<p>Configuration class for keyboard key mappings.</p>\n\n<p>This class defines the mapping between game actions and keyboard keys.\nUsed by <code>nextrpg.event.pygame_event.KeyboardKey</code>,\nand the input handling system to translate keyboard input into game actions.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>left</code>:</strong>  Key code for moving left. The default is <code>K_LEFT</code>.</li>\n<li><strong><code>right</code>:</strong>  Key code for moving right. The default is <code>K_RIGHT</code>.</li>\n<li><strong><code>up</code>:</strong>  Key code for moving up. The default is <code>K_UP</code>.</li>\n<li><strong><code>down</code>:</strong>  Key code for moving down. The default is <code>K_DOWN</code>.</li>\n<li><strong><code>confirm</code>:</strong>  Key code for confirming actions. The default is <code>K_SPACE</code>.</li>\n<li><strong><code>gui_mode_toggle</code>:</strong>  Key code for toggling between\nwindowed and full screen mode. The default is <code>F1</code>.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.KeyMappingConfig.__init__", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">1073741904</span>,</span><span class=\"param\">\t<span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">1073741903</span>,</span><span class=\"param\">\t<span class=\"n\">up</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">1073741906</span>,</span><span class=\"param\">\t<span class=\"n\">down</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">1073741905</span>,</span><span class=\"param\">\t<span class=\"n\">confirm</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">gui_mode_toggle</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"mi\">1073741882</span></span>)</span>"}, {"fullname": "nextrpg.config.KeyMappingConfig.left", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "1073741904"}, {"fullname": "nextrpg.config.KeyMappingConfig.right", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.right", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "1073741903"}, {"fullname": "nextrpg.config.KeyMappingConfig.up", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.up", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "1073741906"}, {"fullname": "nextrpg.config.KeyMappingConfig.down", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.down", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "1073741905"}, {"fullname": "nextrpg.config.KeyMappingConfig.confirm", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.confirm", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "32"}, {"fullname": "nextrpg.config.KeyMappingConfig.gui_mode_toggle", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.gui_mode_toggle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": KeyCode | None", "default_value": "1073741882"}, {"fullname": "nextrpg.config.ResourceConfig", "modulename": "nextrpg.config", "qualname": "ResourceConfig", "kind": "class", "doc": "<p>Configuration class for resource loading.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>map_cache_size</code>:</strong>  The maximum number of TMX maps to cache in memory.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.ResourceConfig.__init__", "modulename": "nextrpg.config", "qualname": "ResourceConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">map_cache_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span></span>)</span>"}, {"fullname": "nextrpg.config.ResourceConfig.map_cache_size", "modulename": "nextrpg.config", "qualname": "ResourceConfig.map_cache_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "8"}, {"fullname": "nextrpg.config.TransitionConfig", "modulename": "nextrpg.config", "qualname": "TransitionConfig", "kind": "class", "doc": "<p>Configuration class for transition scenes.</p>\n\n<p>This config is used by <code>nextrpg.scene.transition_scene.TransitionScene</code>.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>transition_duration</code>:</strong>  The total duration of the transition\nin milliseconds.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.TransitionConfig.__init__", "modulename": "nextrpg.config", "qualname": "TransitionConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">transition_duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"mi\">500</span></span>)</span>"}, {"fullname": "nextrpg.config.TransitionConfig.transition_duration", "modulename": "nextrpg.config", "qualname": "TransitionConfig.transition_duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond", "default_value": "500"}, {"fullname": "nextrpg.config.TextConfig", "modulename": "nextrpg.config", "qualname": "TextConfig", "kind": "class", "doc": "<p>Configuration class for text rendering.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>font</code>:</strong>  The font to use for rendering text.</li>\n<li><strong><code>color</code>:</strong>  The color to use for rendering text.</li>\n<li><strong><code>margin</code>:</strong>  The margin to use for rendering text.</li>\n<li><strong><code>antialias</code>:</strong>  Whether to use antialiasing for rendering text.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.TextConfig.__init__", "modulename": "nextrpg.config", "qualname": "TextConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">font</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Font</span> <span class=\"o\">=</span> <span class=\"n\">Font</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Rgba</span> <span class=\"o\">=</span> <span class=\"n\">Rgba</span><span class=\"p\">(</span><span class=\"n\">red</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">blue</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">antialias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "nextrpg.config.TextConfig.font", "modulename": "nextrpg.config", "qualname": "TextConfig.font", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Font", "default_value": "Font(size=24, name=None)"}, {"fullname": "nextrpg.config.TextConfig.color", "modulename": "nextrpg.config", "qualname": "TextConfig.color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Rgba", "default_value": "Rgba(red=255, green=255, blue=255, alpha=255)"}, {"fullname": "nextrpg.config.TextConfig.margin", "modulename": "nextrpg.config", "qualname": "TextConfig.margin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Pixel", "default_value": "4"}, {"fullname": "nextrpg.config.TextConfig.antialias", "modulename": "nextrpg.config", "qualname": "TextConfig.antialias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "nextrpg.config.Config", "modulename": "nextrpg.config", "qualname": "Config", "kind": "class", "doc": "<p>Main configuration class that aggregates all configuration components.</p>\n\n<p>This is the main configuration object used throughout the application.\nIt can be accessed via the <code>config()</code> function and\ncustomized using <code>set_config()</code>.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>gui</code>:</strong>  The configuration for the graphical user interface.\nUsed by <code>nextrpg.start_game.start_game</code> and rendering systems.</li>\n<li><strong><code>map</code>:</strong>  The configuration for the tile map structure.\nUsed by <code>nextrpg.scene.map_scene.MapScene</code> for TMX interpretation.</li>\n<li><strong><code>character</code>:</strong>  The configuration for character attributes.\nUsed by <code>nextrpg.character.character.Character</code>\nto control movement properties.</li>\n<li><strong><code>rpg_maker_character</code>:</strong>  The configuration for RPG Maker\ncharacter drawings. Used by\n<code>nextrpg.character.rpg_maker_drawing.RpgMakerCharacterDrawing</code>.</li>\n<li><strong><code>key_mapping</code>:</strong>  The configuration for keyboard controls.\nUsed by <code>nextrpg.event.pygame_event</code> for input handling.</li>\n<li><strong><code>resource</code>:</strong>  The configuration for resource loading.</li>\n<li><strong><code>transition</code>:</strong>  The configuration for transition scenes.</li>\n<li><strong><code>text</code>:</strong>  The configuration for text rendering.</li>\n<li><strong><code>debug</code>:</strong>  The configuration for debugging features.\nUsed throughout the codebase when debug rendering is enabled.\nThe default is <code>None</code> which means debugging is disabled.\nUsed by <code>nextrpg.draw_on_screen.Drawing</code> for debug visualization</li>\n</ul>\n"}, {"fullname": "nextrpg.config.Config.__init__", "modulename": "nextrpg.config", "qualname": "Config.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gui</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GuiConfig</span> <span class=\"o\">=</span> <span class=\"n\">GuiConfig</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;nextrpg&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1280</span><span class=\"p\">,</span> <span class=\"mi\">720</span><span class=\"p\">),</span> <span class=\"n\">frames_per_second</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">background_color</span><span class=\"o\">=</span><span class=\"n\">Rgba</span><span class=\"p\">(</span><span class=\"n\">red</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">blue</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">gui_mode</span><span class=\"o\">=&lt;</span><span class=\"n\">GuiMode</span><span class=\"o\">.</span><span class=\"n\">WINDOWED</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">resize_mode</span><span class=\"o\">=&lt;</span><span class=\"n\">ResizeMode</span><span class=\"o\">.</span><span class=\"n\">SCALE</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">allow_window_resize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"nb\">map</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">TileMapConfig</span> <span class=\"o\">=</span> <span class=\"n\">TileMapConfig</span><span class=\"p\">(</span><span class=\"n\">background</span><span class=\"o\">=</span><span class=\"s1\">&#39;background&#39;</span><span class=\"p\">,</span> <span class=\"n\">foreground</span><span class=\"o\">=</span><span class=\"s1\">&#39;foreground&#39;</span><span class=\"p\">,</span> <span class=\"n\">above_character</span><span class=\"o\">=</span><span class=\"s1\">&#39;above_character&#39;</span><span class=\"p\">,</span> <span class=\"n\">collision</span><span class=\"o\">=</span><span class=\"s1\">&#39;collision&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">character</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">CharacterConfig</span> <span class=\"o\">=</span> <span class=\"n\">CharacterConfig</span><span class=\"p\">(</span><span class=\"n\">move_speed</span><span class=\"o\">=</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"n\">idle_duration</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">directions</span><span class=\"o\">=</span><span class=\"nb\">frozenset</span><span class=\"p\">({</span><span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP_RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN_RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN_LEFT</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP_LEFT</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">LEFT</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"o\">&gt;</span><span class=\"p\">}))</span>,</span><span class=\"param\">\t<span class=\"n\">rpg_maker_character</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">RpgMakerCharacterDrawingConfig</span> <span class=\"o\">=</span> <span class=\"n\">RpgMakerCharacterDrawingConfig</span><span class=\"p\">(</span><span class=\"n\">frame_duration</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">key_mapping</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">KeyMappingConfig</span> <span class=\"o\">=</span> <span class=\"n\">KeyMappingConfig</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"o\">=</span><span class=\"mi\">1073741904</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"mi\">1073741903</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"o\">=</span><span class=\"mi\">1073741906</span><span class=\"p\">,</span> <span class=\"n\">down</span><span class=\"o\">=</span><span class=\"mi\">1073741905</span><span class=\"p\">,</span> <span class=\"n\">confirm</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">gui_mode_toggle</span><span class=\"o\">=</span><span class=\"mi\">1073741882</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">resource</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">ResourceConfig</span> <span class=\"o\">=</span> <span class=\"n\">ResourceConfig</span><span class=\"p\">(</span><span class=\"n\">map_cache_size</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">transition</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">TransitionConfig</span> <span class=\"o\">=</span> <span class=\"n\">TransitionConfig</span><span class=\"p\">(</span><span class=\"n\">transition_duration</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">TextConfig</span> <span class=\"o\">=</span> <span class=\"n\">TextConfig</span><span class=\"p\">(</span><span class=\"n\">font</span><span class=\"o\">=</span><span class=\"n\">Font</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">),</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">Rgba</span><span class=\"p\">(</span><span class=\"n\">red</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">blue</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"n\">margin</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">antialias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">DebugConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "nextrpg.config.Config.gui", "modulename": "nextrpg.config", "qualname": "Config.gui", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.GuiConfig", "default_value": "GuiConfig(title=&#x27;nextrpg&#x27;, size=(1280, 720), frames_per_second=60, background_color=Rgba(red=0, green=0, blue=0, alpha=0), gui_mode=&lt;GuiMode.WINDOWED: 1&gt;, resize_mode=&lt;ResizeMode.SCALE: 1&gt;, allow_window_resize=True)"}, {"fullname": "nextrpg.config.Config.map", "modulename": "nextrpg.config", "qualname": "Config.map", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.TileMapConfig", "default_value": "TileMapConfig(background=&#x27;background&#x27;, foreground=&#x27;foreground&#x27;, above_character=&#x27;above_character&#x27;, collision=&#x27;collision&#x27;)"}, {"fullname": "nextrpg.config.Config.character", "modulename": "nextrpg.config", "qualname": "Config.character", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.CharacterConfig", "default_value": "CharacterConfig(move_speed=0.25, idle_duration=1000, directions=frozenset({&lt;Direction.UP_RIGHT: 6&gt;, &lt;Direction.DOWN_RIGHT: 8&gt;, &lt;Direction.DOWN_LEFT: 7&gt;, &lt;Direction.UP: 4&gt;, &lt;Direction.UP_LEFT: 5&gt;, &lt;Direction.RIGHT: 3&gt;, &lt;Direction.DOWN: 1&gt;, &lt;Direction.LEFT: 2&gt;}))"}, {"fullname": "nextrpg.config.Config.rpg_maker_character", "modulename": "nextrpg.config", "qualname": "Config.rpg_maker_character", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.RpgMakerCharacterDrawingConfig", "default_value": "RpgMakerCharacterDrawingConfig(frame_duration=150)"}, {"fullname": "nextrpg.config.Config.key_mapping", "modulename": "nextrpg.config", "qualname": "Config.key_mapping", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyMappingConfig", "default_value": "KeyMappingConfig(left=1073741904, right=1073741903, up=1073741906, down=1073741905, confirm=32, gui_mode_toggle=1073741882)"}, {"fullname": "nextrpg.config.Config.resource", "modulename": "nextrpg.config", "qualname": "Config.resource", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.ResourceConfig", "default_value": "ResourceConfig(map_cache_size=8)"}, {"fullname": "nextrpg.config.Config.transition", "modulename": "nextrpg.config", "qualname": "Config.transition", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.TransitionConfig", "default_value": "TransitionConfig(transition_duration=500)"}, {"fullname": "nextrpg.config.Config.text", "modulename": "nextrpg.config", "qualname": "Config.text", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.TextConfig", "default_value": "TextConfig(font=Font(size=24, name=None), color=Rgba(red=255, green=255, blue=255, alpha=255), margin=4, antialias=True)"}, {"fullname": "nextrpg.config.Config.debug", "modulename": "nextrpg.config", "qualname": "Config.debug", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.DebugConfig | None", "default_value": "None"}, {"fullname": "nextrpg.config.set_config", "modulename": "nextrpg.config", "qualname": "set_config", "kind": "function", "doc": "<p>Sets the global configuration instance.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>cfg</code>:</strong>  The <code>Config</code> instance to use as the current configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cfg</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.config.config", "modulename": "nextrpg.config", "qualname": "config", "kind": "function", "doc": "<p>Gets the current configuration instance.</p>\n\n<p>If no configuration has been set, returns the default <code>Config</code> instance.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Config</code>: The current <code>Config</code> instance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.config.initial_config", "modulename": "nextrpg.config", "qualname": "initial_config", "kind": "function", "doc": "<p>Get the initial configuration instance. This is useful for getting\nthe native/initial GUI resolution.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Config</code>: The initial <code>Config</code> before any GUI/configuration changes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.core", "modulename": "nextrpg.core", "kind": "module", "doc": "<p>Core types referenced across <code>nextrpg</code>.</p>\n"}, {"fullname": "nextrpg.core.Alpha", "modulename": "nextrpg.core", "qualname": "Alpha", "kind": "variable", "doc": "<p>Alpha channel that defines the transparency between [0, 255] for images.\n0 is fully transparent, 255 is fully opaque.</p>\n", "default_value": "int"}, {"fullname": "nextrpg.core.Rgba", "modulename": "nextrpg.core", "qualname": "Rgba", "kind": "class", "doc": "<p>Represents an RGBA color with red, green, blue and alpha components.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>red</code>:</strong>  The red component of the color (0-255).</li>\n<li><strong><code>green</code>:</strong>  The green component of the color (0-255).</li>\n<li><strong><code>blue</code>:</strong>  The blue component of the color (0-255).</li>\n<li><strong><code>alpha</code>:</strong>  The alpha (opacity) component of the color (0-255).</li>\n</ul>\n", "bases": "Rgba"}, {"fullname": "nextrpg.core.Rgba.__init__", "modulename": "nextrpg.core", "qualname": "Rgba.__init__", "kind": "function", "doc": "<p>Create new instance of Rgba(red, green, blue, alpha)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">red</span>, </span><span class=\"param\"><span class=\"n\">green</span>, </span><span class=\"param\"><span class=\"n\">blue</span>, </span><span class=\"param\"><span class=\"n\">alpha</span></span>)</span>"}, {"fullname": "nextrpg.core.Rgba.red", "modulename": "nextrpg.core", "qualname": "Rgba.red", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n", "annotation": ": int"}, {"fullname": "nextrpg.core.Rgba.green", "modulename": "nextrpg.core", "qualname": "Rgba.green", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n", "annotation": ": int"}, {"fullname": "nextrpg.core.Rgba.blue", "modulename": "nextrpg.core", "qualname": "Rgba.blue", "kind": "variable", "doc": "<p>Alias for field number 2</p>\n", "annotation": ": int"}, {"fullname": "nextrpg.core.Rgba.alpha", "modulename": "nextrpg.core", "qualname": "Rgba.alpha", "kind": "variable", "doc": "<p>Alias for field number 3</p>\n", "annotation": ": nextrpg.core.Alpha"}, {"fullname": "nextrpg.core.Millisecond", "modulename": "nextrpg.core", "qualname": "Millisecond", "kind": "variable", "doc": "<p>Millisecond elapsed between game loops.</p>\n", "default_value": "int | float"}, {"fullname": "nextrpg.core.Direction", "modulename": "nextrpg.core", "qualname": "Direction", "kind": "class", "doc": "<p>Represents eight directional movements.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>DOWN</code>:</strong>  Move down and toward the bottom of the screen.</li>\n<li><strong><code>LEFT</code>:</strong>  Move left and toward the left of the screen.</li>\n<li><strong><code>RIGHT</code>:</strong>  Move right and toward the right of the screen.</li>\n<li><strong><code>UP</code>:</strong>  Move up and toward the top of the screen.</li>\n<li><strong><code>UP_LEFT</code>:</strong>  Move up and left diagonally.</li>\n<li><strong><code>UP_RIGHT</code>:</strong>  Move up and right diagonally.</li>\n<li><strong><code>DOWN_LEFT</code>:</strong>  Move down and left diagonally.</li>\n<li><strong><code>DOWN_RIGHT</code>:</strong>  Move down and right diagonally.</li>\n</ul>\n", "bases": "enum.Enum"}, {"fullname": "nextrpg.core.Direction.DOWN", "modulename": "nextrpg.core", "qualname": "Direction.DOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.DOWN: 1&gt;"}, {"fullname": "nextrpg.core.Direction.LEFT", "modulename": "nextrpg.core", "qualname": "Direction.LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.LEFT: 2&gt;"}, {"fullname": "nextrpg.core.Direction.RIGHT", "modulename": "nextrpg.core", "qualname": "Direction.RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.RIGHT: 3&gt;"}, {"fullname": "nextrpg.core.Direction.UP", "modulename": "nextrpg.core", "qualname": "Direction.UP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.UP: 4&gt;"}, {"fullname": "nextrpg.core.Direction.UP_LEFT", "modulename": "nextrpg.core", "qualname": "Direction.UP_LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.UP_LEFT: 5&gt;"}, {"fullname": "nextrpg.core.Direction.UP_RIGHT", "modulename": "nextrpg.core", "qualname": "Direction.UP_RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.UP_RIGHT: 6&gt;"}, {"fullname": "nextrpg.core.Direction.DOWN_LEFT", "modulename": "nextrpg.core", "qualname": "Direction.DOWN_LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.DOWN_LEFT: 7&gt;"}, {"fullname": "nextrpg.core.Direction.DOWN_RIGHT", "modulename": "nextrpg.core", "qualname": "Direction.DOWN_RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.DOWN_RIGHT: 8&gt;"}, {"fullname": "nextrpg.core.Pixel", "modulename": "nextrpg.core", "qualname": "Pixel", "kind": "variable", "doc": "<p>Number of pixel on screen.</p>\n\n<p><code>float</code> is allowed given Pygame supports passing <code>float</code> as <code>Rect</code>.</p>\n", "default_value": "int | float"}, {"fullname": "nextrpg.core.PixelPerMillisecond", "modulename": "nextrpg.core", "qualname": "PixelPerMillisecond", "kind": "variable", "doc": "<p>Used as a unit for speed.</p>\n", "default_value": "int | float"}, {"fullname": "nextrpg.core.DirectionalOffset", "modulename": "nextrpg.core", "qualname": "DirectionalOffset", "kind": "class", "doc": "<p>Represents a directional offset for movement calculations.</p>\n\n<p>This class combines a direction (one of eight possible directions) with\nan offset value to define movement in 2D space. The vector can be used\nwith coordinates to calculate new positions.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>direction</code>:</strong>  The direction of the vector, defined by <code>Direction</code> enum.\nSupports both orthogonal (<code>UP</code>, <code>DOWN</code>, <code>LEFT</code>, <code>RIGHT</code>)\nand diagonal (<code>UP_LEFT</code>, <code>UP_RIGHT</code>, <code>DOWN_LEFT</code>, <code>DOWN_RIGHT</code>).</li>\n<li><strong><code>offset</code>:</strong>  The length of movement in pixels.\nThis value will be decomposed into x, y pixels upon diagnoal moves.</li>\n</ul>\n"}, {"fullname": "nextrpg.core.DirectionalOffset.__init__", "modulename": "nextrpg.core", "qualname": "DirectionalOffset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Direction</span>, </span><span class=\"param\"><span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span></span>)</span>"}, {"fullname": "nextrpg.core.DirectionalOffset.direction", "modulename": "nextrpg.core", "qualname": "DirectionalOffset.direction", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Direction"}, {"fullname": "nextrpg.core.DirectionalOffset.offset", "modulename": "nextrpg.core", "qualname": "DirectionalOffset.offset", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.core.Size", "modulename": "nextrpg.core", "qualname": "Size", "kind": "class", "doc": "<p>Represents the dimensions of a two-dimensional space, such as an image,\nwith defined width and height.</p>\n\n<p>This class is immutable and designed to encapsulate the concept of size\nin pixel measurements.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>width</code>:</strong>  The width of the size in pixels.</li>\n<li><strong><code>height</code>:</strong>  The height of the size in pixels.</li>\n</ul>\n", "bases": "Size"}, {"fullname": "nextrpg.core.Size.__init__", "modulename": "nextrpg.core", "qualname": "Size.__init__", "kind": "function", "doc": "<p>Create new instance of Size(width, height)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span></span>)</span>"}, {"fullname": "nextrpg.core.Size.width", "modulename": "nextrpg.core", "qualname": "Size.width", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.core.Size.height", "modulename": "nextrpg.core", "qualname": "Size.height", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.core.Size.scale", "modulename": "nextrpg.core", "qualname": "Size.scale", "kind": "function", "doc": "<p>Scales the dimensions by a scaling factor and returns a new <code>Size</code>.</p>\n\n<p>The new dimensions are rounded up to the nearest integer.</p>\n\n<p>Round up so that drawings won't leave tiny, black gaps after scaled.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>scaling</code>:</strong>  A scaling factor by which the width and height will be\nmultiplied.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Size</code>: A new <code>Size</code> object representing the scaled dimensions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">scaling</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Size</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.core.Font", "modulename": "nextrpg.core", "qualname": "Font", "kind": "class", "doc": "<p>Font for text in game.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>size</code>:</strong>  Font size in pixels.</li>\n<li><strong><code>name</code>:</strong>  Font name. If <code>None</code>, uses the default system font.</li>\n</ul>\n"}, {"fullname": "nextrpg.core.Font.__init__", "modulename": "nextrpg.core", "qualname": "Font.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "nextrpg.core.Font.size", "modulename": "nextrpg.core", "qualname": "Font.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.core.Font.name", "modulename": "nextrpg.core", "qualname": "Font.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, {"fullname": "nextrpg.core.Font.pygame", "modulename": "nextrpg.core", "qualname": "Font.pygame", "kind": "variable", "doc": "<p>Get the pygame font object.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>pygame.Font</code>: Pygame font object.</p>\n</blockquote>\n"}, {"fullname": "nextrpg.core.Font.text_size", "modulename": "nextrpg.core", "qualname": "Font.text_size", "kind": "function", "doc": "<p>Get the drawing size of a text string.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>text</code>:</strong>  The text string to measure.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Size</code>: The size of the text string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Size</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.core.Timer", "modulename": "nextrpg.core", "qualname": "Timer", "kind": "class", "doc": "<p>A timer with duration and elapsed time.</p>\n"}, {"fullname": "nextrpg.core.Timer.__init__", "modulename": "nextrpg.core", "qualname": "Timer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span>, </span><span class=\"param\"><span class=\"n\">elapsed</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "nextrpg.core.Timer.duration", "modulename": "nextrpg.core", "qualname": "Timer.duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond"}, {"fullname": "nextrpg.core.Timer.elapsed", "modulename": "nextrpg.core", "qualname": "Timer.elapsed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond", "default_value": "0"}, {"fullname": "nextrpg.core.Timer.tick", "modulename": "nextrpg.core", "qualname": "Timer.tick", "kind": "function", "doc": "<p>Tick the timer in a game loop.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time elapsed since the last tick.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Timer</code>: A new timer with elapsed time updated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Timer</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.core.Timer.reset", "modulename": "nextrpg.core", "qualname": "Timer.reset", "kind": "function", "doc": "<p>Get a resetted timer.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Timer</code>: A new timer with elapsed time set to 0.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Timer</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.core.Timer.expired", "modulename": "nextrpg.core", "qualname": "Timer.expired", "kind": "variable", "doc": "<p>Get whether the timer has expired.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: Whether the timer has expired.</p>\n</blockquote>\n", "annotation": ": bool"}, {"fullname": "nextrpg.draw_on_screen", "modulename": "nextrpg.draw_on_screen", "kind": "module", "doc": "<p>Drawable on screen.</p>\n"}, {"fullname": "nextrpg.draw_on_screen.logger", "modulename": "nextrpg.draw_on_screen", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "Logger(component=&#x27;Draw&#x27;)"}, {"fullname": "nextrpg.draw_on_screen.Coordinate", "modulename": "nextrpg.draw_on_screen", "qualname": "Coordinate", "kind": "class", "doc": "<p>Represents a 2D coordinate with immutability and provides methods\nfor scaling and shifting coordinates.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>left</code>:</strong>  The horizontal position of the coordinate, measured by\nthe number of pixels from the left edge of the game window.</li>\n<li><strong><code>top</code>:</strong>  The vertical position of the coordinate, measured by\nthe number of pixels from the top edge of the game window.</li>\n</ul>\n", "bases": "Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Coordinate.__init__", "modulename": "nextrpg.draw_on_screen", "qualname": "Coordinate.__init__", "kind": "function", "doc": "<p>Create new instance of Coordinate(left, top)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">left</span>, </span><span class=\"param\"><span class=\"n\">top</span></span>)</span>"}, {"fullname": "nextrpg.draw_on_screen.Coordinate.left", "modulename": "nextrpg.draw_on_screen", "qualname": "Coordinate.left", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Coordinate.top", "modulename": "nextrpg.draw_on_screen", "qualname": "Coordinate.top", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Drawing", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing", "kind": "class", "doc": "<p>Represents a drawable element and provides methods for accessing its size\nand dimensions.</p>\n\n<p>This class loads a surface from a file or directly accepts a\n<code>pygame.Surface</code> as input.\nIt provides properties to access surface dimensions and size and methods to\ncrop and scale the surface.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>resource</code>:</strong>  A path to a file containing the drawing resource,\nor a <code>pygame.Surface</code> object.</li>\n</ul>\n"}, {"fullname": "nextrpg.draw_on_screen.Drawing.__init__", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">resource</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">PathLike</span> <span class=\"o\">|</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">Surface</span></span>)</span>"}, {"fullname": "nextrpg.draw_on_screen.Drawing.resource", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.resource", "kind": "variable", "doc": "<p></p>\n", "annotation": ": os.PathLike | pygame.surface.Surface"}, {"fullname": "nextrpg.draw_on_screen.Drawing.width", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.width", "kind": "variable", "doc": "<p>Gets the width of the surface.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The width of the surface in pixel measurement.</p>\n</blockquote>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Drawing.height", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.height", "kind": "variable", "doc": "<p>Gets the height of the surface.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The height of the surface in pixel measurement.</p>\n</blockquote>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Drawing.size", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.size", "kind": "variable", "doc": "<p>Gets the size of an object as a combination of its width and height</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Size</code>: A Size object containing the width and height of the object.</p>\n</blockquote>\n", "annotation": ": nextrpg.core.Size"}, {"fullname": "nextrpg.draw_on_screen.Drawing.pygame", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.pygame", "kind": "variable", "doc": "<p>Gets the current <code>pygame.Surface</code> for the object.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>pygame.Surface</code>: The underlying <code>pygame.Surface</code>.</p>\n</blockquote>\n", "annotation": ": pygame.surface.Surface"}, {"fullname": "nextrpg.draw_on_screen.Drawing.crop", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.crop", "kind": "function", "doc": "<p>Crops a rectangular portion of the drawing specified by the\ntop-left corner and the size.</p>\n\n<p>The method extracts a subsection of the drawing based on the provided\ncoordinates and dimensions and returns a new <code>Drawing</code> instance.\nThe original drawing remains unchanged.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>top_left</code>:</strong>  The top-left coordinate of the rectangle to be cropped.</li>\n<li><strong><code>size</code>:</strong>  The width and height of the rectangle to be cropped.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing</code>: A new <code>Drawing</code> instance representing the cropped area.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">top_left</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Size</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.draw_on_screen.Drawing.set_alpha", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.set_alpha", "kind": "function", "doc": "<p>Creates a new <code>Drawing</code> with the specified alpha value.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>alpha</code>:</strong>  The new alpha value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing</code>: A new <code>Drawing</code> with the specified alpha value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"n\">Alpha</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen", "kind": "class", "doc": "<p>Represents a drawable element positioned on the screen with its coordinates.</p>\n\n<p>This immutable class combines a drawing with its position and provides\nproperties to access various coordinates and dimensions of the drawing\non the screen.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>top_left</code>:</strong>  The top-left position of the drawing on the screen.</li>\n<li><strong><code>drawing</code>:</strong>  The drawable element to be displayed on the screen.</li>\n</ul>\n"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.__init__", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">top_left</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>,</span><span class=\"param\">\t<span class=\"n\">drawing</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span></span>)</span>"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.top_left", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.top_left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.drawing", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.drawing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.draw_on_screen.Drawing"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.rectangle", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.rectangle", "kind": "variable", "doc": "<p>Gets the rectangular bounds of the drawing on screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Rectangle</code>: A rectangle defining the drawing's position and size\n  on screen.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Rectangle"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.visible_rectangle", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.visible_rectangle", "kind": "variable", "doc": "<p>Calculate the actual visible bounds of the drawing,\nignoring transparent pixels.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Rectangle</code>: A rectangle defining only the visible (non-transparent)\n  portion of the drawing on screen.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Rectangle"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.pygame", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.pygame", "kind": "variable", "doc": "<p>Gets the pygame surface and coordinate tuple for rendering.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>tuple[pygame.Surface, tuple[float, float]]</code>:\n      A tuple containing the <code>pygame.Surface</code> and a tuple of the left\n      and top coordinates (x, y).</p>\n</blockquote>\n", "annotation": ": tuple[pygame.surface.Surface, tuple[Pixel, Pixel]]"}, {"fullname": "nextrpg.draw_on_screen.Polygon", "modulename": "nextrpg.draw_on_screen", "qualname": "Polygon", "kind": "class", "doc": "<p>Polygon is a collection of points.</p>\n"}, {"fullname": "nextrpg.draw_on_screen.Polygon.__init__", "modulename": "nextrpg.draw_on_screen", "qualname": "Polygon.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">points</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "nextrpg.draw_on_screen.Polygon.points", "modulename": "nextrpg.draw_on_screen", "qualname": "Polygon.points", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[nextrpg.draw_on_screen.Coordinate]"}, {"fullname": "nextrpg.draw_on_screen.Polygon.bounding_rectangle", "modulename": "nextrpg.draw_on_screen", "qualname": "Polygon.bounding_rectangle", "kind": "variable", "doc": "<p>Get a rectangle bounding the polygon.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Rectangle</code>: A rectangle bounding the polygon.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Rectangle"}, {"fullname": "nextrpg.draw_on_screen.Polygon.fill", "modulename": "nextrpg.draw_on_screen", "qualname": "Polygon.fill", "kind": "function", "doc": "<p>Creates a colored <code>DrawOnScreen</code> with the provided color.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>Color</code>:</strong>  The color to fill the rectangle.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>DrawOnScreen</code>: A transparent surface matching rectangle dimensions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Rgba</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">DrawOnScreen</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.draw_on_screen.Polygon.collide", "modulename": "nextrpg.draw_on_screen", "qualname": "Polygon.collide", "kind": "function", "doc": "<p>Checks if this rectangle overlaps with another polygon.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>poly</code>:</strong>  The polygon to check for collision with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: True if two polygons overlap, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">poly</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Polygon</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.draw_on_screen.Polygon.contain", "modulename": "nextrpg.draw_on_screen", "qualname": "Polygon.contain", "kind": "function", "doc": "<p>Checks if a coordinate point lies within this polygon.</p>\n\n<p>The point is considered inside if it falls in the polygon's bounds,\nincluding points on the edges.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>coordinate</code>:</strong>  The coordinate point to check</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: Whether the coordinate lies within the rectangle.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coordinate</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.draw_on_screen.Rectangle", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle", "kind": "class", "doc": "<p>A rectangle polygon defined by its top left corner and size.</p>\n", "bases": "Polygon"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.__init__", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>top_left</code>:</strong>  The top-left corner of the rectangle.</li>\n<li><strong><code>size</code>:</strong>  The dimensions of the rectangle, including its\nwidth and height.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">top_left</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>, </span><span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Size</span></span>)</span>"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.top_left", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.top_left", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.size", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.left", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.left", "kind": "variable", "doc": "<p>Gets the leftmost x-coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The leftmost x-coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.right", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.right", "kind": "variable", "doc": "<p>Gets the rightmost x-coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The rightmost x-coordinate (left + width).</p>\n</blockquote>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.top", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.top", "kind": "variable", "doc": "<p>Gets the topmost y-coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The topmost y-coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.bottom", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.bottom", "kind": "variable", "doc": "<p>Gets the bottommost y-coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The bottommost y-coordinate (top + height).</p>\n</blockquote>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.top_right", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.top_right", "kind": "variable", "doc": "<p>Gets the top-right coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The top-right coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.bottom_left", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.bottom_left", "kind": "variable", "doc": "<p>Gets the bottom-left coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The bottom-left coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.bottom_right", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.bottom_right", "kind": "variable", "doc": "<p>Gets the bottom-right coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The bottom-right coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.top_center", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.top_center", "kind": "variable", "doc": "<p>Gets the center point of the top edge of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The top-center coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.bottom_center", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.bottom_center", "kind": "variable", "doc": "<p>Gets the center point of the bottom edge of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The bottom-center coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.center_left", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.center_left", "kind": "variable", "doc": "<p>Gets the center point of the left edge of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The left-center coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.center_right", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.center_right", "kind": "variable", "doc": "<p>Gets the center point of the right edge of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The right-center coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.center", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.center", "kind": "variable", "doc": "<p>Gets the center point of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The center coordinate of the drawing.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.points", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.points", "kind": "variable", "doc": "<p>Get the coordinates of the corners of the rectangle.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[Coordinate, ...]</code>: The coordinates of the corners\n      of the rectangle.</p>\n</blockquote>\n", "annotation": ": list[nextrpg.draw_on_screen.Coordinate]"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.collide", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.collide", "kind": "function", "doc": "<p>Checks if this rectangle overlaps with another polygon.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>poly</code>:</strong>  The polygon to check for collision with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: True if two polygons overlap, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">poly</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Polygon</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.draw_on_screen.Rectangle.contain", "modulename": "nextrpg.draw_on_screen", "qualname": "Rectangle.contain", "kind": "function", "doc": "<p>Checks if a coordinate point lies within this polygon.</p>\n\n<p>The point is considered inside if it falls in the polygon's bounds,\nincluding points on the edges.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>coordinate</code>:</strong>  The coordinate point to check</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: Whether the coordinate lies within the rectangle.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coordinate</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.event", "modulename": "nextrpg.event", "kind": "module", "doc": "<p>Package for event.</p>\n"}, {"fullname": "nextrpg.event.move", "modulename": "nextrpg.event.move", "kind": "module", "doc": "<p>Move event.</p>\n"}, {"fullname": "nextrpg.event.move.Move", "modulename": "nextrpg.event.move", "qualname": "Move", "kind": "class", "doc": "<p>Move event from the current scene to another.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>to_object</code>:</strong>  Name of the object to move to.</li>\n<li><strong><code>trigger_object</code>:</strong>  Name of the object to trigger the move.</li>\n<li><strong><code>next_scene</code>:</strong>  Callable to get the next scene.</li>\n</ul>\n"}, {"fullname": "nextrpg.event.move.Move.__init__", "modulename": "nextrpg.event.move", "qualname": "Move.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">to_object</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">trigger_object</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">next_scene</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "nextrpg.event.move.Move.to_object", "modulename": "nextrpg.event.move", "qualname": "Move.to_object", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "nextrpg.event.move.Move.trigger_object", "modulename": "nextrpg.event.move", "qualname": "Move.trigger_object", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "nextrpg.event.move.Move.next_scene", "modulename": "nextrpg.event.move", "qualname": "Move.next_scene", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Callable[[nextrpg.character.character_drawing.CharacterDrawing, str], nextrpg.scene.scene.Scene]"}, {"fullname": "nextrpg.event.move.Move.to_scene", "modulename": "nextrpg.event.move", "qualname": "Move.to_scene", "kind": "function", "doc": "<p>Move to another scene.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>character</code>:</strong>  The character to appear in the next scene.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Scene</code>: The next scene.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">character</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.event.pygame_event", "modulename": "nextrpg.event.pygame_event", "kind": "module", "doc": "<p>Typed events initiated from <code>pygame.Event</code>.</p>\n"}, {"fullname": "nextrpg.event.pygame_event.PygameEvent", "modulename": "nextrpg.event.pygame_event", "qualname": "PygameEvent", "kind": "class", "doc": "<p>Base class for all pygame events.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>event</code>:</strong>  The pygame event object to wrap</li>\n</ul>\n"}, {"fullname": "nextrpg.event.pygame_event.PygameEvent.__init__", "modulename": "nextrpg.event.pygame_event", "qualname": "PygameEvent.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span></span>)</span>"}, {"fullname": "nextrpg.event.pygame_event.PygameEvent.event", "modulename": "nextrpg.event.pygame_event", "qualname": "PygameEvent.event", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pygame.event.Event"}, {"fullname": "nextrpg.event.pygame_event.Quit", "modulename": "nextrpg.event.pygame_event", "qualname": "Quit", "kind": "class", "doc": "<p>Represents a quit event from pygame.</p>\n", "bases": "PygameEvent"}, {"fullname": "nextrpg.event.pygame_event.GuiResize", "modulename": "nextrpg.event.pygame_event", "qualname": "GuiResize", "kind": "class", "doc": "<p>Represents a window resize event from pygame.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>size</code>:</strong>  The new size of the window.</li>\n</ul>\n", "bases": "PygameEvent"}, {"fullname": "nextrpg.event.pygame_event.GuiResize.size", "modulename": "nextrpg.event.pygame_event", "qualname": "GuiResize.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Size"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey", "kind": "class", "doc": "<p>Enumeration of supported keyboard keys.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>LEFT</code>:</strong>  Represents the left arrow key.</li>\n<li><strong><code>RIGHT</code>:</strong>  Represents the right arrow key.</li>\n<li><strong><code>UP</code>:</strong>  Represents the up arrow key.</li>\n<li><strong><code>DOWN</code>:</strong>  Represents the down arrow key.</li>\n<li><strong><code>CONFIRM</code>:</strong>  Represents the space key.</li>\n</ul>\n", "bases": "enum.Enum"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.UNKNOWN", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.UNKNOWN: 1&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.LEFT", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.LEFT: 2&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.RIGHT", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.RIGHT: 3&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.UP", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.UP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.UP: 4&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.DOWN", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.DOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.DOWN: 5&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.CONFIRM", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.CONFIRM", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.CONFIRM: 6&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.GUI_MODE_TOGGLE", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.GUI_MODE_TOGGLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.GUI_MODE_TOGGLE: 7&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.from_pygame", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.from_pygame", "kind": "function", "doc": "<p>Maps pygame key constant to internal <code>KeyboardKey</code> representation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>key</code>:</strong>  The pygame key constant to convert</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>KeyboardKey</code> | <code>KeyCode</code>: The corresponding internal\n      key representation. If the key is not supported,\n      returns the raw key code.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">KeyboardKey</span> <span class=\"o\">|</span> <span class=\"n\">KeyCode</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.event.pygame_event.KeyPressDown", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyPressDown", "kind": "class", "doc": "<p>Represents a key press down event.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>key</code>:</strong>  The key pressed down.</li>\n</ul>\n", "bases": "_KeyPressEvent"}, {"fullname": "nextrpg.event.pygame_event.KeyPressUp", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyPressUp", "kind": "class", "doc": "<p>Represents a key release event.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>key</code>:</strong>  The key pressed up.</li>\n</ul>\n", "bases": "_KeyPressEvent"}, {"fullname": "nextrpg.event.pygame_event.to_typed_event", "modulename": "nextrpg.event.pygame_event", "qualname": "to_typed_event", "kind": "function", "doc": "<p>Creates a typed event wrapper for pygame events.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>event</code>:</strong>  The pygame event to wrap</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>PygameEvent</code>: subclass instance based on the event type</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.event.rpg_event", "modulename": "nextrpg.event.rpg_event", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.event.rpg_event.RpgEvent", "modulename": "nextrpg.event.rpg_event", "qualname": "RpgEvent", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "nextrpg.frames", "modulename": "nextrpg.frames", "kind": "module", "doc": "<p>Static frames, when played sequentially, become animated.</p>\n"}, {"fullname": "nextrpg.frames.CyclicFrames", "modulename": "nextrpg.frames", "qualname": "CyclicFrames", "kind": "class", "doc": "<p>Static frames that can be played sequentially to create animations.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>frames</code>:</strong>  List of drawings that make up the animation sequence.</li>\n<li><strong><code>duration_per_frame</code>:</strong>  Time to display each frame in milliseconds.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CyclicFrames</code>: An instance managing a frame-based animation sequence.</p>\n</blockquote>\n"}, {"fullname": "nextrpg.frames.CyclicFrames.__init__", "modulename": "nextrpg.frames", "qualname": "CyclicFrames.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">frames</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">duration_per_frame</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span>,</span><span class=\"param\">\t<span class=\"n\">_index</span><span class=\"p\">:</span> <span class=\"n\">_FrameIndex</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">_timer</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Timer</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.frames.CyclicFrames.frames", "modulename": "nextrpg.frames", "qualname": "CyclicFrames.frames", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[nextrpg.draw_on_screen.Drawing]"}, {"fullname": "nextrpg.frames.CyclicFrames.duration_per_frame", "modulename": "nextrpg.frames", "qualname": "CyclicFrames.duration_per_frame", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond"}, {"fullname": "nextrpg.frames.CyclicFrames.current_frame", "modulename": "nextrpg.frames", "qualname": "CyclicFrames.current_frame", "kind": "variable", "doc": "<p>Get the currently active frame in the animation sequence.</p>\n\n<p>Returns the drawing at the current animation index position.\nThe result is cached until the instance is replaced with a new one.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing</code>: The current frame in the animation sequence.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.Drawing"}, {"fullname": "nextrpg.frames.CyclicFrames.tick", "modulename": "nextrpg.frames", "qualname": "CyclicFrames.tick", "kind": "function", "doc": "<p>Advance animation frames based on elapsed time.</p>\n\n<p>Calculates how many frames to advance based on the accumulated time and\ncreates a new CyclicFrames instance with updated index and elapsed time.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since the last step.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CyclicFrames</code>: A new instance with an updated animation state.\n  The frame index is updated according to elapsed time and\n  wraps around when it reaches the end of the frame list.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">CyclicFrames</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.frames.CyclicFrames.reset", "modulename": "nextrpg.frames", "qualname": "CyclicFrames.reset", "kind": "function", "doc": "<p>Reset the animation sequence to its initial state.</p>\n\n<p>Creates a new CyclicFrames instance with the animation index and\nelapsed time reset to zero, effectively restarting the animation.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>CyclicFrames</code>: A new instance with the animation state reset to\n  the beginning of the sequence.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">CyclicFrames</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.game", "modulename": "nextrpg.game", "kind": "module", "doc": "<p>Start the game window and game loop.</p>\n"}, {"fullname": "nextrpg.game.logger", "modulename": "nextrpg.game", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "Logger(component=&#x27;GameLoop&#x27;)"}, {"fullname": "nextrpg.game.Game", "modulename": "nextrpg.game", "qualname": "Game", "kind": "class", "doc": "<p>Sets up a game window, loads the entry scene.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>entry_scene</code>:</strong>  A function that returns the entry scene.\nThis has to be a function but not a direct <code>Scene</code> instance,\nbecause drawings can only be loaded after pygame initialization.</li>\n</ul>\n"}, {"fullname": "nextrpg.game.Game.__init__", "modulename": "nextrpg.game", "qualname": "Game.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">entry_scene</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">_loop</span><span class=\"p\">:</span> <span class=\"n\">_GameLoop</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.game.Game.entry_scene", "modulename": "nextrpg.game", "qualname": "Game.entry_scene", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Callable[[], nextrpg.scene.scene.Scene]"}, {"fullname": "nextrpg.game.Game.start", "modulename": "nextrpg.game", "qualname": "Game.start", "kind": "function", "doc": "<p>Start the game in a local pygame window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.game.Game.start_async", "modulename": "nextrpg.game", "qualname": "Game.start_async", "kind": "function", "doc": "<p>Start the game in async fashion in the context of pygbag/web.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "nextrpg.gui", "modulename": "nextrpg.gui", "kind": "module", "doc": "<p>Game window / Graphical User Interface (GUI).</p>\n"}, {"fullname": "nextrpg.gui.logger", "modulename": "nextrpg.gui", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "Logger(component=&#x27;GUI&#x27;)"}, {"fullname": "nextrpg.gui.Gui", "modulename": "nextrpg.gui", "qualname": "Gui", "kind": "class", "doc": "<p>Initialize a <code>Gui</code> instance that scales and centers drawings.</p>\n"}, {"fullname": "nextrpg.gui.Gui.__init__", "modulename": "nextrpg.gui", "qualname": "Gui.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">current_config</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GuiConfig</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">last_config</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GuiConfig</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">initial_config</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GuiConfig</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">_screen</span><span class=\"p\">:</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">Surface</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "nextrpg.gui.Gui.current_config", "modulename": "nextrpg.gui", "qualname": "Gui.current_config", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.GuiConfig"}, {"fullname": "nextrpg.gui.Gui.last_config", "modulename": "nextrpg.gui", "qualname": "Gui.last_config", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.GuiConfig"}, {"fullname": "nextrpg.gui.Gui.initial_config", "modulename": "nextrpg.gui", "qualname": "Gui.initial_config", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.GuiConfig"}, {"fullname": "nextrpg.gui.Gui.event", "modulename": "nextrpg.gui", "qualname": "Gui.event", "kind": "function", "doc": "<p><code>Gui</code> will action on <code>KeyPressDown</code> and <code>GuiResize</code> events.\n    <code>KeyPressDown</code> will toggle between windowed and fullscreen GUI mode,\n        upon <code>KeyboardKey.GUI_MODE_TOGGLE</code>.</p>\n\n<pre><code>`GuiResize` will scale the screen appropriately based on config.\n</code></pre>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>e</code>:</strong>  The event to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Gui</code>: An updated <code>Gui</code> instance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">gui</span><span class=\"o\">.</span><span class=\"n\">Gui</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.gui.Gui.draw", "modulename": "nextrpg.gui", "qualname": "Gui.draw", "kind": "function", "doc": "<p>Draw the given drawings to the screen.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>draw_on_screens</code>:</strong>  The drawings to draw to the screen.</li>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since the last update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">draw_on_screens</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">DrawOnScreen</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.logger", "modulename": "nextrpg.logger", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.logger.DurationFromConfig", "modulename": "nextrpg.logger", "qualname": "DurationFromConfig", "kind": "class", "doc": "<p>Sentinel class to indicate that the log duration is taken from config.</p>\n"}, {"fullname": "nextrpg.logger.FROM_CONFIG", "modulename": "nextrpg.logger", "qualname": "FROM_CONFIG", "kind": "variable", "doc": "<p>Sentinel object to indicate that the log duration is taken from config.</p>\n", "default_value": "&lt;nextrpg.logger.DurationFromConfig object&gt;"}, {"fullname": "nextrpg.logger.Logger", "modulename": "nextrpg.logger", "qualname": "Logger", "kind": "class", "doc": "<p>On-screen logger.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>component</code>:</strong>  Unique name of the component that the logger is for.</li>\n</ul>\n"}, {"fullname": "nextrpg.logger.Logger.__init__", "modulename": "nextrpg.logger", "qualname": "Logger.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">component</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "nextrpg.logger.Logger.component", "modulename": "nextrpg.logger", "qualname": "Logger.component", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "nextrpg.logger.Logger.debug", "modulename": "nextrpg.logger", "qualname": "Logger.debug", "kind": "function", "doc": "<p>Debug log message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>message</code>:</strong>  The message to log.</li>\n<li><strong><code>duration</code>:</strong>  The duration of the log message. If <code>None</code>, the message\nwill be flushed in next game loop. If <code>FROM_CONFIG</code>, the\nduration is taken from <code>config().debug.log_duration</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">templatelib</span><span class=\"o\">.</span><span class=\"n\">Template</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">|</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">DurationFromConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.logger.Logger.info", "modulename": "nextrpg.logger", "qualname": "Logger.info", "kind": "function", "doc": "<p>Info log message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>message</code>:</strong>  The message to log.</li>\n<li><strong><code>duration</code>:</strong>  The duration of the log message.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">templatelib</span><span class=\"o\">.</span><span class=\"n\">Template</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">|</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">DurationFromConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.logger.Logger.warning", "modulename": "nextrpg.logger", "qualname": "Logger.warning", "kind": "function", "doc": "<p>Warning log message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>message</code>:</strong>  The message to log.</li>\n<li><strong><code>duration</code>:</strong>  The duration of the log message.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">templatelib</span><span class=\"o\">.</span><span class=\"n\">Template</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">|</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">DurationFromConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.logger.Logger.error", "modulename": "nextrpg.logger", "qualname": "Logger.error", "kind": "function", "doc": "<p>Error log message.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>message</code>:</strong>  The message to log.</li>\n<li><strong><code>duration</code>:</strong>  The duration of the log message.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">templatelib</span><span class=\"o\">.</span><span class=\"n\">Template</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">|</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">DurationFromConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.logger.ComponentAndMessage", "modulename": "nextrpg.logger", "qualname": "ComponentAndMessage", "kind": "class", "doc": "<p>Log component and message pair.</p>\n", "bases": "typing.NamedTuple"}, {"fullname": "nextrpg.logger.ComponentAndMessage.__init__", "modulename": "nextrpg.logger", "qualname": "ComponentAndMessage.__init__", "kind": "function", "doc": "<p>Create new instance of ComponentAndMessage(component, message)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">component</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "nextrpg.logger.ComponentAndMessage.component", "modulename": "nextrpg.logger", "qualname": "ComponentAndMessage.component", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n", "annotation": ": str"}, {"fullname": "nextrpg.logger.ComponentAndMessage.message", "modulename": "nextrpg.logger", "qualname": "ComponentAndMessage.message", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n", "annotation": ": str"}, {"fullname": "nextrpg.logger.pop_messages", "modulename": "nextrpg.logger", "qualname": "pop_messages", "kind": "function", "doc": "<p>Pop all log messages and return them in a formatted fashion.</p>\n\n<p>Arguments::\n    <code>time_delta</code>: Milliseconds since last game loop.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[ComponentAndMessage]</code>: List of log messages.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">ComponentAndMessage</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.model", "modulename": "nextrpg.model", "kind": "module", "doc": "<p>Model definition.</p>\n"}, {"fullname": "nextrpg.model.instance_init", "modulename": "nextrpg.model", "qualname": "instance_init", "kind": "function", "doc": "<p>Used to mark a field for instance initialization.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>init</code>:</strong>  Function that takes <code>self</code> as an argument and returns\nthe initial value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Any</code>: Internal field with the given initialization function.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">init</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.model.register_instance_init", "modulename": "nextrpg.model", "qualname": "register_instance_init", "kind": "function", "doc": "<p>Class decorator to allow the use of <code>instance_init</code> in dataclasses.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>cls</code>:</strong>  The class to decorate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>type</code>: The decorated class.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.model.cached", "modulename": "nextrpg.model", "qualname": "cached", "kind": "class", "doc": "<p>Class decorator to <code>T</code> that caches instances of <code>T</code> by a certain size\nand a key function that takes <code>**P</code> and returns <code>K</code>.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>size_fun</code>:</strong>  Function that returns the maximum size of the cache.</li>\n<li><strong><code>key_fun</code>:</strong>  Function that takes the same arguments as the class, to\nbe used as the cache key. Defaults to a function that takes all\nargs and kwargs.</li>\n</ul>\n", "bases": "typing.Generic[T, K, P]"}, {"fullname": "nextrpg.model.cached.__init__", "modulename": "nextrpg.model", "qualname": "cached.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">size_fun</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">key_fun</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"n\">P</span><span class=\"p\">,</span> <span class=\"n\">K</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">_key</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.model.cached.size_fun", "modulename": "nextrpg.model", "qualname": "cached.size_fun", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Callable[[], int]"}, {"fullname": "nextrpg.model.cached.key_fun", "modulename": "nextrpg.model", "qualname": "cached.key_fun", "kind": "function", "doc": "<p>The type of the None singleton.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene", "modulename": "nextrpg.scene", "kind": "module", "doc": "<p>Package for scenes.</p>\n"}, {"fullname": "nextrpg.scene.map_helper", "modulename": "nextrpg.scene.map_helper", "kind": "module", "doc": "<p>Map helper class for loading the TMX tiles.</p>\n"}, {"fullname": "nextrpg.scene.map_helper.logger", "modulename": "nextrpg.scene.map_helper", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "Logger(component=&#x27;MapHelper&#x27;)"}, {"fullname": "nextrpg.scene.map_helper.TileBottomAndDraw", "modulename": "nextrpg.scene.map_helper", "qualname": "TileBottomAndDraw", "kind": "class", "doc": "<p>Represents a foreground tile of the bottommost pixel from its tile class,\nand a <code>DrawOnScreen</code> of the tile itself.</p>\n\n<p>This is particularly useful for foreground tiles when performing y-sorting\nto determine the laying between the character and the tile: bigger y-axis\n(closer to the bottom) means closer to the camera and hence obstructing\ntiles/characters above it.</p>\n\n<p>We need to group the tiles given a single graphical object may be split\ninto multiple tiles in a Tiled tmx map.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>bottom</code>:</strong>  The bottommost pixel for the tile group that this tile is in.</li>\n<li><strong><code>draw</code>:</strong>  The <code>DrawOnScreen</code> of the tile itself.</li>\n</ul>\n", "bases": "typing.NamedTuple"}, {"fullname": "nextrpg.scene.map_helper.TileBottomAndDraw.__init__", "modulename": "nextrpg.scene.map_helper", "qualname": "TileBottomAndDraw.__init__", "kind": "function", "doc": "<p>Create new instance of TileBottomAndDraw(bottom, draw)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">bottom</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span>, </span><span class=\"param\"><span class=\"n\">draw</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">DrawOnScreen</span></span>)</span>"}, {"fullname": "nextrpg.scene.map_helper.TileBottomAndDraw.bottom", "modulename": "nextrpg.scene.map_helper", "qualname": "TileBottomAndDraw.bottom", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n", "annotation": ": nextrpg.core.Pixel"}, {"fullname": "nextrpg.scene.map_helper.TileBottomAndDraw.draw", "modulename": "nextrpg.scene.map_helper", "qualname": "TileBottomAndDraw.draw", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n", "annotation": ": nextrpg.draw_on_screen.DrawOnScreen"}, {"fullname": "nextrpg.scene.map_helper.get_polygon", "modulename": "nextrpg.scene.map_helper", "qualname": "get_polygon", "kind": "function", "doc": "<p>Create a polygon from a Tiled object on a map.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>obj</code>:</strong>  The Tiled object to create a polygon from.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Polygon</code>: The polygon created from the Tiled object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">pytmx</span><span class=\"o\">.</span><span class=\"n\">pytmx</span><span class=\"o\">.</span><span class=\"n\">TiledObject</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Polygon</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.map_helper.MapHelper", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper", "kind": "class", "doc": "<p>Tiled tmx map helper class for loading the tiles.</p>\n"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.__init__", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tmx_file</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span></span>)</span>"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.tmx_file", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.tmx_file", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.map_size", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.map_size", "kind": "variable", "doc": "<p>Return the full map size in pixels.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Size</code>: The map size.</p>\n</blockquote>\n", "annotation": ": nextrpg.core.Size"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.background", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.background", "kind": "variable", "doc": "<p>The list of background drawings.</p>\n\n<p>The background layers are ones marked with the class name\n<code>config().map.background</code>.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[DrawOnScreen]</code>: The list of background drawings.</p>\n</blockquote>\n", "annotation": ": list[nextrpg.draw_on_screen.DrawOnScreen]"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.foreground", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.foreground", "kind": "variable", "doc": "<p>The list of foreground drawings with bottom pixel info.</p>\n\n<p>The foreground layers are ones marked with the class name\n<code>config().map.foreground</code>.</p>\n\n<p>The list is in increasing order of layer index, meaning the layer\nshall obstruct previous tiles.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[list[TileBottomAndDraw]]</code>: The list of foreground drawings.</p>\n</blockquote>\n", "annotation": ": list[list[nextrpg.scene.map_helper.TileBottomAndDraw]]"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.above_character", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.above_character", "kind": "variable", "doc": "<p>Get the list of above-character drawings, which are all layers\nwith the class name <code>config().map.above_character</code>.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[DrawOnScreen]</code>: The list of above-character drawings.</p>\n</blockquote>\n", "annotation": ": list[nextrpg.draw_on_screen.DrawOnScreen]"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.collisions", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.collisions", "kind": "variable", "doc": "<p>Retrieve collision polygons from the tiles and objects.</p>\n\n<ol>\n<li>From tiles: mark the tile collision polygon/rectangle in tileset.</li>\n<li>From objects: mark the polygon/rectangle object class as\n<code>config().map.collision</code>.</li>\n</ol>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[Polygon]</code>: List of collision polygons.</p>\n</blockquote>\n", "annotation": ": list[nextrpg.draw_on_screen.Polygon]"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.get_object", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.get_object", "kind": "function", "doc": "<p>Get the first object of the given name from all visible object layers.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>name</code>:</strong>  The unique name to retrieve the object by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>TiledObject</code>: The tile object with the given name.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pytmx</span><span class=\"o\">.</span><span class=\"n\">pytmx</span><span class=\"o\">.</span><span class=\"n\">TiledObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.map_helper.MapHelper.get_objects_by_class_name", "modulename": "nextrpg.scene.map_helper", "qualname": "MapHelper.get_objects_by_class_name", "kind": "function", "doc": "<p>Get objects of the given class name from all visible object layers.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>class_name</code>:</strong>  The class name to retrieve objects by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[TiledObject]</code>: The tile objects with the given name.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">class_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pytmx</span><span class=\"o\">.</span><span class=\"n\">pytmx</span><span class=\"o\">.</span><span class=\"n\">TiledObject</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.map_scene", "modulename": "nextrpg.scene.map_scene", "kind": "module", "doc": "<p>Map scene implementation.</p>\n"}, {"fullname": "nextrpg.scene.map_scene.logger", "modulename": "nextrpg.scene.map_scene", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "Logger(component=&#x27;MapScene&#x27;)"}, {"fullname": "nextrpg.scene.map_scene.MapScene", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene", "kind": "class", "doc": "<p>A scene implementation that represents a game map loaded from Tiled TMX.</p>\n\n<p>Handles rendering of map layers, character movement with collisions,\nand proper depth sorting of foreground elements relative to the player.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>tmx_file</code>:</strong>  Path to the Tiled TMX file to load.</li>\n<li><strong><code>player_drawing</code>:</strong>  Character drawing representing the player.</li>\n<li><strong><code>player_coordinate_object</code>:</strong>  Name of the object to use as the player.\nDefault to <code>None</code> to use the <code>config().map.player</code>.</li>\n<li><strong><code>moves</code>:</strong>  List of move objects to trigger when the player enters a new\nmap.</li>\n</ul>\n", "bases": "nextrpg.scene.scene.Scene"}, {"fullname": "nextrpg.scene.map_scene.MapScene.__init__", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tmx_file</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>,</span><span class=\"param\">\t<span class=\"n\">initial_player_drawing</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>,</span><span class=\"param\">\t<span class=\"n\">player_coordinate_object</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">moves</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"o\">.</span><span class=\"n\">Move</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">_map_helper</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">map_helper</span><span class=\"o\">.</span><span class=\"n\">MapHelper</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">_player</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">player_on_screen</span><span class=\"o\">.</span><span class=\"n\">PlayerOnScreen</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.scene.map_scene.MapScene.tmx_file", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.tmx_file", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pathlib.Path"}, {"fullname": "nextrpg.scene.map_scene.MapScene.initial_player_drawing", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.initial_player_drawing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.character_drawing.CharacterDrawing"}, {"fullname": "nextrpg.scene.map_scene.MapScene.player_coordinate_object", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.player_coordinate_object", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "nextrpg.scene.map_scene.MapScene.moves", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.moves", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[nextrpg.event.move.Move]"}, {"fullname": "nextrpg.scene.map_scene.MapScene.draw_on_screens", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.draw_on_screens", "kind": "variable", "doc": "<p>Generate the complete list of drawable elements for the map scene.</p>\n\n<p>Combines background elements, depth-sorted foreground elements with the\nplayer character, and any debug visuals from the player character.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[DrawOnScreen]</code>: The complete list of drawable elements in the\n  correct rendering order.</p>\n</blockquote>\n", "annotation": ": list[nextrpg.draw_on_screen.DrawOnScreen]"}, {"fullname": "nextrpg.scene.map_scene.MapScene.event", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.event", "kind": "function", "doc": "<p>Process input events for the map scene.</p>\n\n<p>Delegates event handling to the player character and returns an\nupdated scene with the new player state.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>event</code>:</strong>  The pygame event to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Scene</code>: The updated scene after processing the event.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.map_scene.MapScene.tick", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.tick", "kind": "function", "doc": "<p>Update the map scene state for a single game step/frame.</p>\n\n<p>Updates the player character's position and animation state based on the\nelapsed time since the last frame.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since the last update.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Scene</code>: The updated scene after the time step.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.scene", "modulename": "nextrpg.scene.scene", "kind": "module", "doc": "<p>Scene is an interface of all game interactions like exploration, menu, etc.</p>\n"}, {"fullname": "nextrpg.scene.scene.Scene", "modulename": "nextrpg.scene.scene", "qualname": "Scene", "kind": "class", "doc": "<p>Base class representing a game scene.</p>\n\n<p>This class defines the interface for game scenes, providing methods for\nhandling events and drawing content on the screen. All game scenes must\nimplement these methods.</p>\n"}, {"fullname": "nextrpg.scene.scene.Scene.draw_on_screens", "modulename": "nextrpg.scene.scene", "qualname": "Scene.draw_on_screens", "kind": "variable", "doc": "<p>Get the list of drawables to be rendered on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[DrawOnScreen]</code>: The list of drawables to be rendered\n      on the screen.</p>\n</blockquote>\n", "annotation": ": list[nextrpg.draw_on_screen.DrawOnScreen]"}, {"fullname": "nextrpg.scene.scene.Scene.event", "modulename": "nextrpg.scene.scene", "qualname": "Scene.event", "kind": "function", "doc": "<p>Handles events for the scene.</p>\n\n<p>The recommended implementation is via <code>@singledispatchmethod</code>.\nAnd implement events of interesting <code>nextrpg.event.pygame_event</code> types.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyScene</span><span class=\"p\">(</span><span class=\"n\">Scene</span><span class=\"p\">):</span>\n    <span class=\"nd\">@singledispatchmethod</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">event</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">PygameEvent</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Scene</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_down</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">KeyPressDown</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Scene</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">KeyPressUp</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Scene</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">GuiResize</span> <span class=\"o\">|</span> <span class=\"n\">Quit</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Scene</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n</code></pre>\n</div>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>event</code>:</strong>  The pygame event to process</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Scene</code>: The updated scene state after processing the event.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.scene.Scene.tick", "modulename": "nextrpg.scene.scene", "qualname": "Scene.tick", "kind": "function", "doc": "<p>Update the scene state for a single game step/frame.</p>\n\n<p>Progresses the scene state based on the elapsed time since the\nlast update, handling animations, movements,\nand other time-dependent changes.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since the last update,\nused for calculating time-based changes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Scene</code>: The updated scene state after the time step.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.transition_scene", "modulename": "nextrpg.scene.transition_scene", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.scene.transition_scene.TransitionScene", "modulename": "nextrpg.scene.transition_scene", "qualname": "TransitionScene", "kind": "class", "doc": "<p>Transition from one scene to another.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>from_scene</code>:</strong>  The scene to transition from.</li>\n<li><strong><code>to_scene</code>:</strong>  The scene to transition to.</li>\n</ul>\n", "bases": "nextrpg.scene.scene.Scene"}, {"fullname": "nextrpg.scene.transition_scene.TransitionScene.__init__", "modulename": "nextrpg.scene.transition_scene", "qualname": "TransitionScene.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">from_scene</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span>,</span><span class=\"param\">\t<span class=\"n\">to_scene</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span>,</span><span class=\"param\">\t<span class=\"n\">duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">_elapsed</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "nextrpg.scene.transition_scene.TransitionScene.from_scene", "modulename": "nextrpg.scene.transition_scene", "qualname": "TransitionScene.from_scene", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.scene.scene.Scene"}, {"fullname": "nextrpg.scene.transition_scene.TransitionScene.to_scene", "modulename": "nextrpg.scene.transition_scene", "qualname": "TransitionScene.to_scene", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.scene.scene.Scene"}, {"fullname": "nextrpg.scene.transition_scene.TransitionScene.duration", "modulename": "nextrpg.scene.transition_scene", "qualname": "TransitionScene.duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.core.Millisecond"}, {"fullname": "nextrpg.scene.transition_scene.TransitionScene.draw_on_screens", "modulename": "nextrpg.scene.transition_scene", "qualname": "TransitionScene.draw_on_screens", "kind": "variable", "doc": "<p>Get the list of drawables to be rendered on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[DrawOnScreen]</code>: The list of drawables to be rendered\n      on the screen.</p>\n</blockquote>\n", "annotation": ": list[nextrpg.draw_on_screen.DrawOnScreen]"}, {"fullname": "nextrpg.scene.transition_scene.TransitionScene.tick", "modulename": "nextrpg.scene.transition_scene", "qualname": "TransitionScene.tick", "kind": "function", "doc": "<p>Update the scene state for a single game step/frame.</p>\n\n<p>Progresses the scene state based on the elapsed time since the\nlast update, handling animations, movements,\nand other time-dependent changes.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time that has passed since the last update,\nused for calculating time-based changes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Scene</code>: The updated scene state after the time step.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.text", "modulename": "nextrpg.text", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.text.Text", "modulename": "nextrpg.text", "qualname": "Text", "kind": "class", "doc": "<p>Text printed on screen.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>message</code>:</strong>  The text to print.</li>\n<li><strong><code>top_left</code>:</strong>  The top-left coordinate of the text.</li>\n<li><strong><code>config</code>:</strong>  The text configuration.</li>\n</ul>\n"}, {"fullname": "nextrpg.text.Text.__init__", "modulename": "nextrpg.text", "qualname": "Text.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">top_left</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">TextConfig</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.text.Text.message", "modulename": "nextrpg.text", "qualname": "Text.message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "nextrpg.text.Text.top_left", "modulename": "nextrpg.text", "qualname": "Text.top_left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.draw_on_screen.Coordinate"}, {"fullname": "nextrpg.text.Text.config", "modulename": "nextrpg.text", "qualname": "Text.config", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.TextConfig"}, {"fullname": "nextrpg.text.Text.draw_on_screen", "modulename": "nextrpg.text", "qualname": "Text.draw_on_screen", "kind": "variable", "doc": "<p>The text rendered on screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>DrawOnScreen</code>: The text rendered on screen.</p>\n</blockquote>\n", "annotation": ": nextrpg.draw_on_screen.DrawOnScreen"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();