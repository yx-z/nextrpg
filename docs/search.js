window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "nextrpg", "modulename": "nextrpg", "kind": "module", "doc": "<p>Build your next RPG (Role Playing Game).</p>\n"}, {"fullname": "nextrpg.character", "modulename": "nextrpg.character", "kind": "module", "doc": "<p>Characters modules related to moving objects in the game.</p>\n"}, {"fullname": "nextrpg.character.character_drawing", "modulename": "nextrpg.character.character_drawing", "kind": "module", "doc": "<p>Character drawing interface.</p>\n"}, {"fullname": "nextrpg.character.character_drawing.CharacterDrawing", "modulename": "nextrpg.character.character_drawing", "qualname": "CharacterDrawing", "kind": "class", "doc": "<p>Interface for drawing characters on screen.</p>\n", "bases": "abc.ABC"}, {"fullname": "nextrpg.character.character_drawing.CharacterDrawing.draw", "modulename": "nextrpg.character.character_drawing", "qualname": "CharacterDrawing.draw", "kind": "function", "doc": "<p>Draws the character on the screen based on the given parameters.</p>\n\n<p>Generates the visual representation of the character taking into account\nthe time elapsed, facing direction and movement state.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  Time has elapsed since the last frame in milliseconds.</li>\n<li><strong><code>direction</code>:</strong>  Current facing direction of the character.</li>\n<li><strong><code>is_moving</code>:</strong>  Flag indicating whether the character is in motion.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing</code>: Contains the character's visual representation</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Direction</span>,</span><span class=\"param\">\t<span class=\"n\">is_moving</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.character_on_screen", "modulename": "nextrpg.character.character_on_screen", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.character.character_on_screen.CharacterAndVisuals", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterAndVisuals", "kind": "class", "doc": "<p>CharacterAndVisuals(character, visuals)</p>\n", "bases": "typing.NamedTuple"}, {"fullname": "nextrpg.character.character_on_screen.CharacterAndVisuals.__init__", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterAndVisuals.__init__", "kind": "function", "doc": "<p>Create new instance of CharacterAndVisuals(character, visuals)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">character</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">DrawOnScreen</span>,</span><span class=\"param\">\t<span class=\"n\">visuals</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">DrawOnScreen</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "nextrpg.character.character_on_screen.CharacterAndVisuals.character", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterAndVisuals.character", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n", "annotation": ": nextrpg.draw_on_screen.DrawOnScreen"}, {"fullname": "nextrpg.character.character_on_screen.CharacterAndVisuals.visuals", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterAndVisuals.visuals", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n", "annotation": ": list[nextrpg.draw_on_screen.DrawOnScreen]"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.__init__", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">character_sprite</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span>,</span><span class=\"param\">\t<span class=\"n\">coordinate</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Direction</span>,</span><span class=\"param\">\t<span class=\"n\">collisions</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Rectangle</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">speed</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.direction", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.direction", "kind": "variable", "doc": "<p>Gets the current direction of the character.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Direction</code>: The current direction that the character is facing.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Direction"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.coordinate", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.coordinate", "kind": "variable", "doc": "<p>Gets the current coordinate of the character.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The current position of the character on screen.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.event", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.event", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.character_on_screen.CharacterOnScreen.draw_on_screen", "modulename": "nextrpg.character.character_on_screen", "qualname": "CharacterOnScreen.draw_on_screen", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_on_screen</span><span class=\"o\">.</span><span class=\"n\">CharacterAndVisuals</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.character.rpg_maker_drawing", "modulename": "nextrpg.character.rpg_maker_drawing", "kind": "module", "doc": "<p>RPG Maker character drawing implementation.</p>\n\n<p>This module provides functionality for rendering RPG Maker-style character\nsprites with support for different sprite sheet formats and animation patterns.</p>\n\n<p>Note that <code>nextrpg</code> is only compatible with RPG Maker character sprite,\nto be able to re-use existing resources.</p>\n\n<p>However, using RPG Maker's\n<a href=\"https://www.rpgmakerweb.com/run-time-package\">Runtime Time Package (RTP)</a>\nin non-RPG Maker framework violates the license of RPG Maker,\neven if you own a copy of RPG Maker.</p>\n"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Style", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Style", "kind": "class", "doc": "<p>Sprite sheet style enumeration.</p>\n\n<p>Defines different RPG Maker sprite sheet formats that can be used\nfor character animation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>DEFAULT</code>:</strong>  RPG Maker VX/VX Ace/MV/MZ sprite sheet format.</li>\n<li><strong><code>XP</code>:</strong>  RPG Maker XP style sprite sheet format.</li>\n</ul>\n", "bases": "enum.Enum"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Style.DEFAULT", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Style.DEFAULT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Style.DEFAULT: 1&gt;"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Style.XP", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Style.XP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Style.XP: 2&gt;"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheetSelection", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheetSelection", "kind": "class", "doc": "<p>Configuration for selecting a portion of a sprite sheet.</p>\n\n<p>Defines the position and boundaries for extracting a specific character sprite\nfrom a larger sprite sheet containing multiple characters.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>row</code>:</strong>  Row index of the character sprite in the sprite sheet.</li>\n<li><strong><code>column</code>:</strong>  Column index of the character sprite in the sprite sheet.</li>\n<li><strong><code>max_rows</code>:</strong>  Total number of rows in the sprite sheet.</li>\n<li><strong><code>max_columns</code>:</strong>  Total number of columns in the sprite sheet.</li>\n</ul>\n"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheetSelection.__init__", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheetSelection.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">row</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">column</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">max_rows</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">max_columns</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span></span>)</span>"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheetSelection.row", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheetSelection.row", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheetSelection.column", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheetSelection.column", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheetSelection.max_rows", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheetSelection.max_rows", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheetSelection.max_columns", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheetSelection.max_columns", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Margin", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Margin", "kind": "class", "doc": "<p>Margin settings for sprite sheet frames.</p>\n\n<p>Defines the padding around individual sprite frames that should be trimmed\nduring rendering.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>top</code>:</strong>  Number of pixels to trim from the top.</li>\n<li><strong><code>bottom</code>:</strong>  Number of pixels to trim from the bottom.</li>\n<li><strong><code>left</code>:</strong>  Number of pixels to trim from the left.</li>\n<li><strong><code>right</code>:</strong>  Number of pixels to trim from the right.</li>\n</ul>\n"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Margin.__init__", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Margin.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">top</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">bottom</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Margin.top", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Margin.top", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel", "default_value": "0"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Margin.bottom", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Margin.bottom", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel", "default_value": "0"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Margin.left", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Margin.left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel", "default_value": "0"}, {"fullname": "nextrpg.character.rpg_maker_drawing.Margin.right", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "Margin.right", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel", "default_value": "0"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheet", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheet", "kind": "class", "doc": "<p>Container for sprite sheet configuration.</p>\n\n<p>Holds all necessary information to process and render character sprites\nfrom a sprite sheet image.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>drawing</code>:</strong>  The sprite sheet image to process.</li>\n<li><strong><code>selection</code>:</strong>  Optional for selecting a portion of the sprite sheet.</li>\n<li><strong><code>margin</code>:</strong>  Margin settings for trimming individual frames.</li>\n<li><strong><code>style</code>:</strong>  The sprite sheet format style to use.</li>\n</ul>\n"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheet.__init__", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">drawing</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span>,</span><span class=\"param\">\t<span class=\"n\">selection</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">rpg_maker_drawing</span><span class=\"o\">.</span><span class=\"n\">SpriteSheetSelection</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">rpg_maker_drawing</span><span class=\"o\">.</span><span class=\"n\">Margin</span> <span class=\"o\">=</span> <span class=\"n\">Margin</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">bottom</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">left</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">style</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">rpg_maker_drawing</span><span class=\"o\">.</span><span class=\"n\">Style</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Style</span><span class=\"o\">.</span><span class=\"n\">DEFAULT</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheet.drawing", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheet.drawing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.draw_on_screen.Drawing"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheet.selection", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheet.selection", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.rpg_maker_drawing.SpriteSheetSelection | None", "default_value": "None"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheet.margin", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheet.margin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.rpg_maker_drawing.Margin", "default_value": "Margin(top=0, bottom=0, left=0, right=0)"}, {"fullname": "nextrpg.character.rpg_maker_drawing.SpriteSheet.style", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "SpriteSheet.style", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.character.rpg_maker_drawing.Style", "default_value": "&lt;Style.DEFAULT: 1&gt;"}, {"fullname": "nextrpg.character.rpg_maker_drawing.RpgMakerCharacterDrawing", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "RpgMakerCharacterDrawing", "kind": "class", "doc": "<p>RPG Maker style character drawing implementation.</p>\n\n<p>Handles character animation using RPG Maker style sprite sheets with support\nfor different directions and movement states.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>sprite_sheet</code>:</strong>  Configuration for the character's sprite sheet.</li>\n<li><strong><code>animate_on_idle</code>:</strong>  Whether to animate the character when not moving.</li>\n<li><strong><code>frame_duration</code>:</strong>  Duration for each animation frame in milliseconds.\nIf not specified, the default duration from <code>Config</code> is used.</li>\n</ul>\n", "bases": "nextrpg.character.character_drawing.CharacterDrawing"}, {"fullname": "nextrpg.character.rpg_maker_drawing.RpgMakerCharacterDrawing.__init__", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "RpgMakerCharacterDrawing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sprite_sheet</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">rpg_maker_drawing</span><span class=\"o\">.</span><span class=\"n\">SpriteSheet</span>,</span><span class=\"param\">\t<span class=\"n\">animate_on_idle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">frame_duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "nextrpg.character.rpg_maker_drawing.RpgMakerCharacterDrawing.draw", "modulename": "nextrpg.character.rpg_maker_drawing", "qualname": "RpgMakerCharacterDrawing.draw", "kind": "function", "doc": "<p>The <code>draw</code> method determines the appropriate sprite frame to display\nbased on the direction, movement state, and elapsed time.\nIt adjusts the direction of the sprite,\ncalculates frame timing for animations, and handles transitioning to\nthe next or current frame of the sprite animation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  The time in milliseconds that has passed since the last frame.\nThis is used to calculate the frame timing for animations.</li>\n<li><strong><code>direction</code>:</strong>  The direction in which the object is currently facing or moving.\nThis affects the selection of the sprite frame.</li>\n<li><strong><code>is_moving</code>:</strong>  Indicates if the object is in motion.\nThis affects whether animations for the sprite\nare played or reset.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing</code>:\n      An object that represents the current frame or sprite based on\n      the direction and movement state of the object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Direction</span>,</span><span class=\"param\">\t<span class=\"n\">is_moving</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.common_types", "modulename": "nextrpg.common_types", "kind": "module", "doc": "<p>Common types referenced across <code>nextrpg</code>.</p>\n"}, {"fullname": "nextrpg.common_types.Rgba", "modulename": "nextrpg.common_types", "qualname": "Rgba", "kind": "class", "doc": "<p>Represents an RGBA color with red, green, blue and alpha components.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>red</code>:</strong>  The red component of the color (0-255).</li>\n<li><strong><code>green</code>:</strong>  The green component of the color (0-255).</li>\n<li><strong><code>blue</code>:</strong>  The blue component of the color (0-255).</li>\n<li><strong><code>alpha</code>:</strong>  The alpha (opacity) component of the color (0-255).</li>\n</ul>\n"}, {"fullname": "nextrpg.common_types.Rgba.__init__", "modulename": "nextrpg.common_types", "qualname": "Rgba.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">red</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">green</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">blue</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "nextrpg.common_types.Rgba.red", "modulename": "nextrpg.common_types", "qualname": "Rgba.red", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.common_types.Rgba.green", "modulename": "nextrpg.common_types", "qualname": "Rgba.green", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.common_types.Rgba.blue", "modulename": "nextrpg.common_types", "qualname": "Rgba.blue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.common_types.Rgba.alpha", "modulename": "nextrpg.common_types", "qualname": "Rgba.alpha", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "nextrpg.common_types.Rgba.tuple", "modulename": "nextrpg.common_types", "qualname": "Rgba.tuple", "kind": "variable", "doc": "<p>Gets the color components as a tuple.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>tuple[int, int, int, int]</code>: A tuple containing the red, green,\n  blue and alpha values in that order.</p>\n</blockquote>\n", "annotation": ": tuple[int, int, int, int]"}, {"fullname": "nextrpg.common_types.Millisecond", "modulename": "nextrpg.common_types", "qualname": "Millisecond", "kind": "variable", "doc": "<p>Millisecond elapsed between game loops.</p>\n", "default_value": "int"}, {"fullname": "nextrpg.common_types.Direction", "modulename": "nextrpg.common_types", "qualname": "Direction", "kind": "class", "doc": "<p>Represents eight directional movements.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>DOWN</code>:</strong>  Move down and toward the bottom of the screen.</li>\n<li><strong><code>LEFT</code>:</strong>  Move left and toward the left of the screen.</li>\n<li><strong><code>RIGHT</code>:</strong>  Move right and toward the right of the screen.</li>\n<li><strong><code>UP</code>:</strong>  Move up and toward the top of the screen.</li>\n<li><strong><code>UP_LEFT</code>:</strong>  Move up and left diagonally.</li>\n<li><strong><code>UP_RIGHT</code>:</strong>  Move up and right diagonally.</li>\n<li><strong><code>DOWN_LEFT</code>:</strong>  Move down and left diagonally.</li>\n<li><strong><code>DOWN_RIGHT</code>:</strong>  Move down and right diagonally.</li>\n</ul>\n", "bases": "enum.Enum"}, {"fullname": "nextrpg.common_types.Direction.DOWN", "modulename": "nextrpg.common_types", "qualname": "Direction.DOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.DOWN: 1&gt;"}, {"fullname": "nextrpg.common_types.Direction.LEFT", "modulename": "nextrpg.common_types", "qualname": "Direction.LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.LEFT: 2&gt;"}, {"fullname": "nextrpg.common_types.Direction.RIGHT", "modulename": "nextrpg.common_types", "qualname": "Direction.RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.RIGHT: 3&gt;"}, {"fullname": "nextrpg.common_types.Direction.UP", "modulename": "nextrpg.common_types", "qualname": "Direction.UP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.UP: 4&gt;"}, {"fullname": "nextrpg.common_types.Direction.UP_LEFT", "modulename": "nextrpg.common_types", "qualname": "Direction.UP_LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.UP_LEFT: 5&gt;"}, {"fullname": "nextrpg.common_types.Direction.UP_RIGHT", "modulename": "nextrpg.common_types", "qualname": "Direction.UP_RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.UP_RIGHT: 6&gt;"}, {"fullname": "nextrpg.common_types.Direction.DOWN_LEFT", "modulename": "nextrpg.common_types", "qualname": "Direction.DOWN_LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.DOWN_LEFT: 7&gt;"}, {"fullname": "nextrpg.common_types.Direction.DOWN_RIGHT", "modulename": "nextrpg.common_types", "qualname": "Direction.DOWN_RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.DOWN_RIGHT: 8&gt;"}, {"fullname": "nextrpg.common_types.Pixel", "modulename": "nextrpg.common_types", "qualname": "Pixel", "kind": "variable", "doc": "<p>Number of pixel on screen.</p>\n\n<p><code>float</code> is allowed given Pygame supports passing <code>float</code> as <code>Rect</code>.</p>\n", "default_value": "int | float"}, {"fullname": "nextrpg.common_types.PolarVector", "modulename": "nextrpg.common_types", "qualname": "PolarVector", "kind": "class", "doc": "<p>Represents a vector with direction and magnitude for movement calculations.</p>\n\n<p>This class combines a direction (one of eight possible directions) with\nan offset value to define movement in 2D space. The vector can be used\nwith coordinates to calculate new positions.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>direction</code>:</strong>  The direction of the vector, defined by <code>Direction</code> enum.\nSupports both orthogonal (<code>UP</code>, <code>DOWN</code>, <code>LEFT</code>, <code>RIGHT</code>)\nand diagonal (<code>UP_LEFT</code>, <code>UP_RIGHT</code>, <code>DOWN_LEFT</code>, <code>DOWN_RIGHT</code>).</li>\n<li><strong><code>offset</code>:</strong>  The length of movement in pixels.\nThis value will be decomposed into x, y pixels upon diagnoal moves.</li>\n</ul>\n"}, {"fullname": "nextrpg.common_types.PolarVector.__init__", "modulename": "nextrpg.common_types", "qualname": "PolarVector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Direction</span>, </span><span class=\"param\"><span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span></span>)</span>"}, {"fullname": "nextrpg.common_types.PolarVector.direction", "modulename": "nextrpg.common_types", "qualname": "PolarVector.direction", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Direction"}, {"fullname": "nextrpg.common_types.PolarVector.offset", "modulename": "nextrpg.common_types", "qualname": "PolarVector.offset", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Coordinate", "modulename": "nextrpg.common_types", "qualname": "Coordinate", "kind": "class", "doc": "<p>Represents a 2D coordinate with immutability and provides methods\nfor scaling and shifting coordinates.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>left</code>:</strong>  The horizontal position of the coordinate, measured by\nthe number of pixels from the left edge of the game window.</li>\n<li><strong><code>top</code>:</strong>  The vertical position of the coordinate, measured by\nthe number of pixels from the top edge of the game window.</li>\n</ul>\n"}, {"fullname": "nextrpg.common_types.Coordinate.__init__", "modulename": "nextrpg.common_types", "qualname": "Coordinate.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span>, </span><span class=\"param\"><span class=\"n\">top</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span></span>)</span>"}, {"fullname": "nextrpg.common_types.Coordinate.left", "modulename": "nextrpg.common_types", "qualname": "Coordinate.left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Coordinate.top", "modulename": "nextrpg.common_types", "qualname": "Coordinate.top", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Coordinate.tuple", "modulename": "nextrpg.common_types", "qualname": "Coordinate.tuple", "kind": "variable", "doc": "<p>Gets the coordinates as a tuple.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>tuple[Pixel, Pixel]</code>: A tuple containing the left and top\n      values in that order.</p>\n</blockquote>\n", "annotation": ": tuple[Pixel, Pixel]"}, {"fullname": "nextrpg.common_types.Size", "modulename": "nextrpg.common_types", "qualname": "Size", "kind": "class", "doc": "<p>Represents the dimensions of a two-dimensional space, such as an image,\nwith defined width and height.</p>\n\n<p>This class is immutable and designed to encapsulate the concept of size\nin pixel measurements.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>width:</strong>  The width of the size in pixels.</li>\n<li><strong>height:</strong>  The height of the size in pixels.</li>\n</ul>\n"}, {"fullname": "nextrpg.common_types.Size.__init__", "modulename": "nextrpg.common_types", "qualname": "Size.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span>, </span><span class=\"param\"><span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span></span>)</span>"}, {"fullname": "nextrpg.common_types.Size.width", "modulename": "nextrpg.common_types", "qualname": "Size.width", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Size.height", "modulename": "nextrpg.common_types", "qualname": "Size.height", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Size.tuple", "modulename": "nextrpg.common_types", "qualname": "Size.tuple", "kind": "variable", "doc": "<p>Gets the dimensions as a tuple.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>tuple[Pixel, Pixel]</code>: A tuple containing the width and height\n      values in that order.</p>\n</blockquote>\n", "annotation": ": tuple[Pixel, Pixel]"}, {"fullname": "nextrpg.common_types.Rectangle", "modulename": "nextrpg.common_types", "qualname": "Rectangle", "kind": "class", "doc": "<p>Represents an immutable rectangle defined by its top left corner and size.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>top_left</code>:</strong>  The top-left corner of the rectangle.</li>\n<li><strong><code>size</code>:</strong>  The dimensions of the rectangle, including its width and height.</li>\n</ul>\n"}, {"fullname": "nextrpg.common_types.Rectangle.__init__", "modulename": "nextrpg.common_types", "qualname": "Rectangle.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">top_left</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Size</span></span>)</span>"}, {"fullname": "nextrpg.common_types.Rectangle.top_left", "modulename": "nextrpg.common_types", "qualname": "Rectangle.top_left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.size", "modulename": "nextrpg.common_types", "qualname": "Rectangle.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Size"}, {"fullname": "nextrpg.common_types.Rectangle.left", "modulename": "nextrpg.common_types", "qualname": "Rectangle.left", "kind": "variable", "doc": "<p>Gets the leftmost x-coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The leftmost x-coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Rectangle.right", "modulename": "nextrpg.common_types", "qualname": "Rectangle.right", "kind": "variable", "doc": "<p>Gets the rightmost x-coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The rightmost x-coordinate (left + width).</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Rectangle.top", "modulename": "nextrpg.common_types", "qualname": "Rectangle.top", "kind": "variable", "doc": "<p>Gets the topmost y-coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The topmost y-coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Rectangle.bottom", "modulename": "nextrpg.common_types", "qualname": "Rectangle.bottom", "kind": "variable", "doc": "<p>Gets the bottommost y-coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The bottommost y-coordinate (top + height).</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.common_types.Rectangle.top_right", "modulename": "nextrpg.common_types", "qualname": "Rectangle.top_right", "kind": "variable", "doc": "<p>Gets the top-right coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The top-right coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.bottom_left", "modulename": "nextrpg.common_types", "qualname": "Rectangle.bottom_left", "kind": "variable", "doc": "<p>Gets the bottom-left coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The bottom-left coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.bottom_right", "modulename": "nextrpg.common_types", "qualname": "Rectangle.bottom_right", "kind": "variable", "doc": "<p>Gets the bottom-right coordinate of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The bottom-right coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.top_center", "modulename": "nextrpg.common_types", "qualname": "Rectangle.top_center", "kind": "variable", "doc": "<p>Gets the center point of the top edge of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The top-center coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.bottom_center", "modulename": "nextrpg.common_types", "qualname": "Rectangle.bottom_center", "kind": "variable", "doc": "<p>Gets the center point of the bottom edge of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The bottom-center coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.center_left", "modulename": "nextrpg.common_types", "qualname": "Rectangle.center_left", "kind": "variable", "doc": "<p>Gets the center point of the left edge of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The left-center coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.center_right", "modulename": "nextrpg.common_types", "qualname": "Rectangle.center_right", "kind": "variable", "doc": "<p>Gets the center point of the right edge of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The right-center coordinate.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.center", "modulename": "nextrpg.common_types", "qualname": "Rectangle.center", "kind": "variable", "doc": "<p>Gets the center point of the drawing on the screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Coordinate</code>: The center coordinate of the drawing.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.common_types.Rectangle.collides", "modulename": "nextrpg.common_types", "qualname": "Rectangle.collides", "kind": "function", "doc": "<p>Checks if this rectangle overlaps with another rectangle.</p>\n\n<p>This method determines if there is any overlap between the\ncurrent rectangle and the provided rectangle by\ncomparing their edge coordinates.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>rectangle</code>:</strong>  The rectangle to check for collision with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>bool</code>: True if the rectangles overlap, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rectangle</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Rectangle</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.config", "modulename": "nextrpg.config", "kind": "module", "doc": "<p>Various configurations for <code>nextrpg</code>.\nYou can either use the implicit, default configuration\nor pass the customized instance to <code>nextrpg.start_game.start_game</code>.</p>\n"}, {"fullname": "nextrpg.config.DebugConfig", "modulename": "nextrpg.config", "qualname": "DebugConfig", "kind": "class", "doc": "<p>Configuration class for debugging purposes.</p>\n\n<p>This config is used by <code>nextrpg.draw_on_screen.Drawing</code>.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>drawing_background_color</code>:</strong>  The background color used for debug drawing.\nDefault is semi-transparent blue (0, 0, 255, 64).</li>\n</ul>\n"}, {"fullname": "nextrpg.config.DebugConfig.__init__", "modulename": "nextrpg.config", "qualname": "DebugConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">drawing_background_color</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Rgba</span> <span class=\"o\">=</span> <span class=\"n\">Rgba</span><span class=\"p\">(</span><span class=\"n\">red</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">blue</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span></span>)</span>"}, {"fullname": "nextrpg.config.DebugConfig.drawing_background_color", "modulename": "nextrpg.config", "qualname": "DebugConfig.drawing_background_color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Rgba", "default_value": "Rgba(red=0, green=0, blue=255, alpha=64)"}, {"fullname": "nextrpg.config.GuiConfig", "modulename": "nextrpg.config", "qualname": "GuiConfig", "kind": "class", "doc": "<p>Configuration class for Graphical User Interface (GUI).</p>\n\n<p>This config is used by <code>nextrpg.start_game.start_game</code>.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>title</code>:</strong>  The title of the GUI window.</li>\n<li><strong><code>size</code>:</strong>  The resolution or dimensions of the GUI window defined\nby width and height.</li>\n<li><strong><code>frames_per_second</code>:</strong>  The target frame rate for the application's\nrendering performance.</li>\n<li><strong><code>allow_resize</code>:</strong>  Indicates if the GUI window allows resizing by the\nuser. And upon resize, the sprites will all be scaled accordingly.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.GuiConfig.__init__", "modulename": "nextrpg.config", "qualname": "GuiConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;NextRPG&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Size</span> <span class=\"o\">=</span> <span class=\"n\">Size</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">1280</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">800</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">frames_per_second</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">allow_resize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "nextrpg.config.GuiConfig.title", "modulename": "nextrpg.config", "qualname": "GuiConfig.title", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;NextRPG&#x27;"}, {"fullname": "nextrpg.config.GuiConfig.size", "modulename": "nextrpg.config", "qualname": "GuiConfig.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Size", "default_value": "Size(width=1280, height=800)"}, {"fullname": "nextrpg.config.GuiConfig.frames_per_second", "modulename": "nextrpg.config", "qualname": "GuiConfig.frames_per_second", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "60"}, {"fullname": "nextrpg.config.GuiConfig.allow_resize", "modulename": "nextrpg.config", "qualname": "GuiConfig.allow_resize", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "nextrpg.config.TileMapProperties", "modulename": "nextrpg.config", "qualname": "TileMapProperties", "kind": "class", "doc": "<p>Configuration class for tile map object properties.</p>\n\n<p>Used by <code>nextrpg.scene.map_scene.MapScene</code> to identify special properties\nin tmx files that define character behaviors.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>character_direction_property</code>:</strong>  Property name for specifying an initial\ncharacter direction in the map for both player and NPCs.</li>\n<li><strong><code>character_speed_property</code>:</strong>  Property name for specifying character\nmovement speed in the map.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.TileMapProperties.character_direction", "modulename": "nextrpg.config", "qualname": "TileMapProperties.character_direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;direction&#x27;"}, {"fullname": "nextrpg.config.TileMapProperties.character_speed", "modulename": "nextrpg.config", "qualname": "TileMapProperties.character_speed", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;speed&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig", "modulename": "nextrpg.config", "qualname": "TileMapConfig", "kind": "class", "doc": "<p>Configuration class for managing tile map layers and properties,\nthat is created from tmx files <a href=\"https://www.mapeditor.org/\">Tiled</a>.</p>\n\n<p>This config is used by <code>nextrpg.scene.map_scene.MapScene</code>.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>background_layer_prefix</code>:</strong>  Prefix of layer name to identify all background layers.</li>\n<li><strong><code>foreground_layer_prefix</code>:</strong>  Prefix of layer name to identify all foreground layers.</li>\n<li><strong><code>collision_layer_prefix</code>:</strong>  Prefix of layer name to identify all collision layers.</li>\n<li><strong><code>object_layer_prefix</code>:</strong>  Prefix of layer name to identify all object layers.</li>\n<li><strong><code>player_object</code>:</strong>  Name for the player object within object layers.</li>\n<li><strong><code>character_direction_property</code>:</strong>  Property name for specifying the initial character direction\nin the map for both player and NPCs.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.TileMapConfig.__init__", "modulename": "nextrpg.config", "qualname": "TileMapConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">background_layer_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;background&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">foreground_layer_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;foreground&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">collision_layer_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;collision&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">object_layer_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;object&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">player_object</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;player&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">TileMapProperties</span> <span class=\"o\">=</span> <span class=\"n\">TileMapProperties</span><span class=\"p\">()</span></span>)</span>"}, {"fullname": "nextrpg.config.TileMapConfig.background_layer_prefix", "modulename": "nextrpg.config", "qualname": "TileMapConfig.background_layer_prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;background&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig.foreground_layer_prefix", "modulename": "nextrpg.config", "qualname": "TileMapConfig.foreground_layer_prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;foreground&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig.collision_layer_prefix", "modulename": "nextrpg.config", "qualname": "TileMapConfig.collision_layer_prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;collision&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig.object_layer_prefix", "modulename": "nextrpg.config", "qualname": "TileMapConfig.object_layer_prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;object&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig.player_object", "modulename": "nextrpg.config", "qualname": "TileMapConfig.player_object", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;player&#x27;"}, {"fullname": "nextrpg.config.TileMapConfig.properties", "modulename": "nextrpg.config", "qualname": "TileMapConfig.properties", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.TileMapProperties", "default_value": "TileMapProperties()"}, {"fullname": "nextrpg.config.CharacterConfig", "modulename": "nextrpg.config", "qualname": "CharacterConfig", "kind": "class", "doc": "<p>Configuration class for characters.</p>\n\n<p>This config is used by <code>nextrpg.character.character.Character</code>.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>default_move_speed</code>:</strong>  The default speed of the character's movement\nin pixels on screen per physical millisecond.\nThe number of pixels is consumed before screen scaling, if any.</li>\n<li><strong><code>move_directions</code>:</strong>  The set of directions that the character can move.\nDefault to all directions (up, left, right, down, and diagonal).</li>\n</ul>\n"}, {"fullname": "nextrpg.config.CharacterConfig.__init__", "modulename": "nextrpg.config", "qualname": "CharacterConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">default_move_speed</span><span class=\"p\">:</span> <span class=\"n\">Pixel</span> <span class=\"o\">=</span> <span class=\"mf\">0.25</span>,</span><span class=\"param\">\t<span class=\"n\">move_directions</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Direction</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "nextrpg.config.CharacterConfig.default_move_speed", "modulename": "nextrpg.config", "qualname": "CharacterConfig.default_move_speed", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel", "default_value": "0.25"}, {"fullname": "nextrpg.config.CharacterConfig.move_directions", "modulename": "nextrpg.config", "qualname": "CharacterConfig.move_directions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": set[nextrpg.common_types.Direction]"}, {"fullname": "nextrpg.config.RpgMakerCharacterSpriteConfig", "modulename": "nextrpg.config", "qualname": "RpgMakerCharacterSpriteConfig", "kind": "class", "doc": "<p>Configuration class for RPG Maker character sprites.</p>\n\n<p>This config is used by\n<code>nextrpg.character.rpg_maker_sprite.RpgMakerCharacterSprite</code>.</p>\n\n<p>Note that <code>nextrpg</code> is only compatible with RPG Maker character sprite,\nto be able to re-use existing resources.</p>\n\n<p>However, using RPG Maker's\n<a href=\"https://www.rpgmakerweb.com/run-time-package\">Runtime Time Package (RTP)</a>\nin non-RPG Maker framework violates the license of RPG Maker,\neven if you own a copy of RPG Maker.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>default_frame_duration</code>:</strong>  The default duration for\na single frame in the character sprite.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.RpgMakerCharacterSpriteConfig.__init__", "modulename": "nextrpg.config", "qualname": "RpgMakerCharacterSpriteConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">default_frame_duration</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span> <span class=\"o\">=</span> <span class=\"mi\">200</span></span>)</span>"}, {"fullname": "nextrpg.config.RpgMakerCharacterSpriteConfig.default_frame_duration", "modulename": "nextrpg.config", "qualname": "RpgMakerCharacterSpriteConfig.default_frame_duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Millisecond", "default_value": "200"}, {"fullname": "nextrpg.config.KeyCode", "modulename": "nextrpg.config", "qualname": "KeyCode", "kind": "variable", "doc": "<p>Type alias for key codes.</p>\n", "default_value": "int"}, {"fullname": "nextrpg.config.KeyMappingConfig", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig", "kind": "class", "doc": "<p>Configuration class for keyboard key mappings.</p>\n\n<p>This class defines the mapping between game actions and keyboard keys.\nUsed by <code>nextrpg.event.pygame_event.KeyboardKey</code>.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>left</code>:</strong>  Key code for moving left. The default is <code>K_LEFT</code>.</li>\n<li><strong><code>right</code>:</strong>  Key code for moving right. The default is <code>K_RIGHT</code>.</li>\n<li><strong><code>up</code>:</strong>  Key code for moving up. The default is <code>K_UP</code>.</li>\n<li><strong><code>down</code>:</strong>  Key code for moving down. The default is <code>K_DOWN</code>.</li>\n<li><strong><code>confirm</code>:</strong>  Key code for confirming actions. The default is <code>K_SPACE</code>.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.KeyMappingConfig.__init__", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">1073741904</span>,</span><span class=\"param\">\t<span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">1073741903</span>,</span><span class=\"param\">\t<span class=\"n\">up</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">1073741906</span>,</span><span class=\"param\">\t<span class=\"n\">down</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">1073741905</span>,</span><span class=\"param\">\t<span class=\"n\">confirm</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span> <span class=\"o\">=</span> <span class=\"mi\">32</span></span>)</span>"}, {"fullname": "nextrpg.config.KeyMappingConfig.left", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "1073741904"}, {"fullname": "nextrpg.config.KeyMappingConfig.right", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.right", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "1073741903"}, {"fullname": "nextrpg.config.KeyMappingConfig.up", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.up", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "1073741906"}, {"fullname": "nextrpg.config.KeyMappingConfig.down", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.down", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "1073741905"}, {"fullname": "nextrpg.config.KeyMappingConfig.confirm", "modulename": "nextrpg.config", "qualname": "KeyMappingConfig.confirm", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyCode", "default_value": "32"}, {"fullname": "nextrpg.config.Config", "modulename": "nextrpg.config", "qualname": "Config", "kind": "class", "doc": "<p>Configuration class for all configs.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>gui</code>:</strong>  The configuration for the graphical user interface.</li>\n<li><strong><code>map</code>:</strong>  The configuration for the tile map structure.</li>\n<li><strong><code>character</code>:</strong>  The configuration for character attributes.</li>\n<li><strong><code>rpg_maker_character_sprite</code>:</strong>  The configuration for\nRPG Maker character sprites.</li>\n<li><strong><code>debug</code>:</strong>  The configuration for debugging.\nThe default is <code>None</code> which means debug turned off.</li>\n</ul>\n"}, {"fullname": "nextrpg.config.Config.__init__", "modulename": "nextrpg.config", "qualname": "Config.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gui</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GuiConfig</span> <span class=\"o\">=</span> <span class=\"n\">GuiConfig</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;NextRPG&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">Size</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">1280</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">800</span><span class=\"p\">),</span> <span class=\"n\">frames_per_second</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">allow_resize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"nb\">map</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">TileMapConfig</span> <span class=\"o\">=</span> <span class=\"n\">TileMapConfig</span><span class=\"p\">(</span><span class=\"n\">background_layer_prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;background&#39;</span><span class=\"p\">,</span> <span class=\"n\">foreground_layer_prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;foreground&#39;</span><span class=\"p\">,</span> <span class=\"n\">collision_layer_prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;collision&#39;</span><span class=\"p\">,</span> <span class=\"n\">object_layer_prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;object&#39;</span><span class=\"p\">,</span> <span class=\"n\">player_object</span><span class=\"o\">=</span><span class=\"s1\">&#39;player&#39;</span><span class=\"p\">,</span> <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">TileMapProperties</span><span class=\"p\">())</span>,</span><span class=\"param\">\t<span class=\"n\">character</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">CharacterConfig</span> <span class=\"o\">=</span> <span class=\"n\">CharacterConfig</span><span class=\"p\">(</span><span class=\"n\">default_move_speed</span><span class=\"o\">=</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"n\">move_directions</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">LEFT</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN_LEFT</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN_RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DOWN</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP_LEFT</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">UP_RIGHT</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"p\">})</span>,</span><span class=\"param\">\t<span class=\"n\">rpg_maker_character_sprite</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">RpgMakerCharacterSpriteConfig</span> <span class=\"o\">=</span> <span class=\"n\">RpgMakerCharacterSpriteConfig</span><span class=\"p\">(</span><span class=\"n\">default_frame_duration</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">key_mapping</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">KeyMappingConfig</span> <span class=\"o\">=</span> <span class=\"n\">KeyMappingConfig</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"o\">=</span><span class=\"mi\">1073741904</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"mi\">1073741903</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"o\">=</span><span class=\"mi\">1073741906</span><span class=\"p\">,</span> <span class=\"n\">down</span><span class=\"o\">=</span><span class=\"mi\">1073741905</span><span class=\"p\">,</span> <span class=\"n\">confirm</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">DebugConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "nextrpg.config.Config.gui", "modulename": "nextrpg.config", "qualname": "Config.gui", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.GuiConfig", "default_value": "GuiConfig(title=&#x27;NextRPG&#x27;, size=Size(width=1280, height=800), frames_per_second=60, allow_resize=True)"}, {"fullname": "nextrpg.config.Config.map", "modulename": "nextrpg.config", "qualname": "Config.map", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.TileMapConfig", "default_value": "TileMapConfig(background_layer_prefix=&#x27;background&#x27;, foreground_layer_prefix=&#x27;foreground&#x27;, collision_layer_prefix=&#x27;collision&#x27;, object_layer_prefix=&#x27;object&#x27;, player_object=&#x27;player&#x27;, properties=TileMapProperties())"}, {"fullname": "nextrpg.config.Config.character", "modulename": "nextrpg.config", "qualname": "Config.character", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.CharacterConfig", "default_value": "CharacterConfig(default_move_speed=0.25, move_directions={&lt;Direction.UP: 4&gt;, &lt;Direction.LEFT: 2&gt;, &lt;Direction.DOWN_LEFT: 7&gt;, &lt;Direction.DOWN_RIGHT: 8&gt;, &lt;Direction.DOWN: 1&gt;, &lt;Direction.UP_LEFT: 5&gt;, &lt;Direction.RIGHT: 3&gt;, &lt;Direction.UP_RIGHT: 6&gt;})"}, {"fullname": "nextrpg.config.Config.rpg_maker_character_sprite", "modulename": "nextrpg.config", "qualname": "Config.rpg_maker_character_sprite", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.RpgMakerCharacterSpriteConfig", "default_value": "RpgMakerCharacterSpriteConfig(default_frame_duration=200)"}, {"fullname": "nextrpg.config.Config.key_mapping", "modulename": "nextrpg.config", "qualname": "Config.key_mapping", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.KeyMappingConfig", "default_value": "KeyMappingConfig(left=1073741904, right=1073741903, up=1073741906, down=1073741905, confirm=32)"}, {"fullname": "nextrpg.config.Config.debug", "modulename": "nextrpg.config", "qualname": "Config.debug", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.config.DebugConfig | None", "default_value": "None"}, {"fullname": "nextrpg.config.set_config", "modulename": "nextrpg.config", "qualname": "set_config", "kind": "function", "doc": "<p>Sets the global configuration instance.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>cfg</code>:</strong>  The <code>Config</code> instance to use as the current configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Config</code>: The current <code>Config</code> instance after being set.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cfg</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.config.config", "modulename": "nextrpg.config", "qualname": "config", "kind": "function", "doc": "<p>Gets the current configuration instance.</p>\n\n<p>If no configuration has been set, returns the default <code>Config</code> instance.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Config</code>: The current <code>Config</code> instance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.draw_on_screen", "modulename": "nextrpg.draw_on_screen", "kind": "module", "doc": "<p>Drawable sprites on screen.</p>\n"}, {"fullname": "nextrpg.draw_on_screen.Drawing", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing", "kind": "class", "doc": "<p>Represents a drawable element and provides methods for accessing its size\nand dimensions.</p>\n\n<p>This class loads a surface from a file or directly accepts a\n<code>pygame.Surface</code> as input.\nIt provides properties to access surface dimensions and size and methods to\ncrop and scale the surface.</p>\n"}, {"fullname": "nextrpg.draw_on_screen.Drawing.__init__", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.__init__", "kind": "function", "doc": "<p>Initializes the object with a resource that is either a file <code>Path</code>\nto an image or a <code>pygame.Surface</code> object.\nIf the resource is a file path, it loads it as a <code>pygame.Surface</code>.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>resource</code>:</strong>  A <code>Path</code> to load a <code>pygame.Surface</code> or\na <code>pygame.Surface</code> object to be used directly.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">resource</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">Surface</span></span>)</span>"}, {"fullname": "nextrpg.draw_on_screen.Drawing.width", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.width", "kind": "variable", "doc": "<p>Gets the width of the surface.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The width of the surface in pixel measurement.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Drawing.height", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.height", "kind": "variable", "doc": "<p>Gets the height of the surface.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Pixel</code>: The height of the surface in pixel measurement.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.draw_on_screen.Drawing.size", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.size", "kind": "variable", "doc": "<p>Gets the size of an object as a combination of its width and height</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Size</code>: A Size object containing the width and height of the object.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Size"}, {"fullname": "nextrpg.draw_on_screen.Drawing.pygame", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.pygame", "kind": "variable", "doc": "<p>Gets the current <code>pygame.Surface</code> for the object.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>pygame.Surface</code>: The underlying <code>pygame.Surface</code>.</p>\n</blockquote>\n", "annotation": ": pygame.surface.Surface"}, {"fullname": "nextrpg.draw_on_screen.Drawing.crop", "modulename": "nextrpg.draw_on_screen", "qualname": "Drawing.crop", "kind": "function", "doc": "<p>Crops a rectangular portion of the drawing specified by the\ntop-left corner and the size.</p>\n\n<p>The method extracts a subsection of the drawing based on the provided\ncoordinates and dimensions and returns a new <code>Drawing</code> instance.\nThe original drawing remains unchanged.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>left_top</code>:</strong>  The top-left coordinate of the rectangle to be cropped.</li>\n<li><strong><code>size</code>:</strong>  The width and height of the rectangle to be cropped.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing</code>: A new <code>Drawing</code> instance representing the cropped area.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">left_top</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Size</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen", "kind": "class", "doc": "<p>Represents a drawable element positioned on the screen with its coordinates.</p>\n\n<p>This immutable class combines a drawing with its position and provides\nproperties to access various coordinates and dimensions of the drawing\non the screen.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>top_left</code>:</strong>  The top-left position of the drawing on the screen.</li>\n<li><strong><code>drawing</code>:</strong>  The drawable element to be displayed on the screen.</li>\n</ul>\n"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.__init__", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">top_left</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Coordinate</span>,</span><span class=\"param\">\t<span class=\"n\">drawing</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span></span>)</span>"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.top_left", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.top_left", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Coordinate"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.drawing", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.drawing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.draw_on_screen.Drawing"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.rectangle", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.rectangle", "kind": "variable", "doc": "<p>Gets the rectangular bounds of the drawing on screen.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Rectangle</code>: A rectangle defining the drawing's position and size\n  on screen.</p>\n</blockquote>\n", "annotation": ": nextrpg.common_types.Rectangle"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.pygame", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.pygame", "kind": "variable", "doc": "<p>Gets the pygame surface and coordinate tuple for rendering.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>tuple[pygame.Surface, tuple[float, float]]</code>:\n      A tuple containing the <code>pygame.Surface</code> and a tuple of the left\n      and top coordinates (x, y).</p>\n</blockquote>\n", "annotation": ": tuple[pygame.surface.Surface, tuple[Pixel, Pixel]]"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.visual_bottom", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.visual_bottom", "kind": "variable", "doc": "<p></p>\n", "annotation": ": nextrpg.common_types.Pixel"}, {"fullname": "nextrpg.draw_on_screen.DrawOnScreen.from_rectangle", "modulename": "nextrpg.draw_on_screen", "qualname": "DrawOnScreen.from_rectangle", "kind": "function", "doc": "<p>Creates a new <code>DrawOnScreen</code> instance from a given rectangle.</p>\n\n<p>Creates a transparent surface with the dimensions of the provided\nrectangle and positions it at the rectangle's top-left coordinate.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>rectangle</code>:</strong>  The rectangle that defines the size and position of the\nnew <code>DrawOnScreen</code> instance.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>DrawOnScreen</code>: A transparent surface matching rectangle dimensions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rectangle</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">common_types</span><span class=\"o\">.</span><span class=\"n\">Rectangle</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">DrawOnScreen</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.event", "modulename": "nextrpg.event", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.event.pygame_event", "modulename": "nextrpg.event.pygame_event", "kind": "module", "doc": "<p>Typed events initiated from <code>pygame.Event</code>.</p>\n"}, {"fullname": "nextrpg.event.pygame_event.PygameEvent", "modulename": "nextrpg.event.pygame_event", "qualname": "PygameEvent", "kind": "class", "doc": "<p>Base class for all pygame events.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>event</code>:</strong>  The pygame event object to wrap</li>\n</ul>\n"}, {"fullname": "nextrpg.event.pygame_event.PygameEvent.__init__", "modulename": "nextrpg.event.pygame_event", "qualname": "PygameEvent.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span></span>)</span>"}, {"fullname": "nextrpg.event.pygame_event.Quit", "modulename": "nextrpg.event.pygame_event", "qualname": "Quit", "kind": "class", "doc": "<p>Represents a quit event from pygame.</p>\n", "bases": "PygameEvent"}, {"fullname": "nextrpg.event.pygame_event.GuiResize", "modulename": "nextrpg.event.pygame_event", "qualname": "GuiResize", "kind": "class", "doc": "<p>Represents a window resize event from pygame.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>size</code>:</strong>  The new size of the window.</li>\n</ul>\n", "bases": "PygameEvent"}, {"fullname": "nextrpg.event.pygame_event.GuiResize.__init__", "modulename": "nextrpg.event.pygame_event", "qualname": "GuiResize.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span></span>)</span>"}, {"fullname": "nextrpg.event.pygame_event.GuiResize.size", "modulename": "nextrpg.event.pygame_event", "qualname": "GuiResize.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Final[nextrpg.common_types.Size]"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey", "kind": "class", "doc": "<p>Enumeration of supported keyboard keys.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>LEFT</code>:</strong>  Represents the left arrow key.</li>\n<li><strong><code>RIGHT</code>:</strong>  Represents the right arrow key.</li>\n<li><strong><code>UP</code>:</strong>  Represents the up arrow key.</li>\n<li><strong><code>DOWN</code>:</strong>  Represents the down arrow key.</li>\n<li><strong><code>CONFIRM</code>:</strong>  Represents the space key.</li>\n</ul>\n", "bases": "enum.Enum"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.UNKNOWN", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.UNKNOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.UNKNOWN: 1&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.LEFT", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.LEFT: 2&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.RIGHT", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.RIGHT: 3&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.UP", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.UP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.UP: 4&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.DOWN", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.DOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.DOWN: 5&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.CONFIRM", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.CONFIRM", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;KeyboardKey.CONFIRM: 6&gt;"}, {"fullname": "nextrpg.event.pygame_event.KeyboardKey.from_pygame", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyboardKey.from_pygame", "kind": "function", "doc": "<p>Maps pygame key constant to internal <code>KeyboardKey</code> representation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>key</code>:</strong>  The pygame key constant to convert</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>KeyboardKey</code>: The corresponding internal key representation.\n      Returns <code>UNKNOWN</code> if the key is not supported.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">KeyCode</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">KeyboardKey</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.event.pygame_event.KeyPressDown", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyPressDown", "kind": "class", "doc": "<p>Represents a key press down event.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>key</code>:</strong>  The key pressed down.</li>\n</ul>\n", "bases": "_KeyPressEvent"}, {"fullname": "nextrpg.event.pygame_event.KeyPressUp", "modulename": "nextrpg.event.pygame_event", "qualname": "KeyPressUp", "kind": "class", "doc": "<p>Represents a key release event.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>key</code>:</strong>  The key pressed up.</li>\n</ul>\n", "bases": "_KeyPressEvent"}, {"fullname": "nextrpg.frames", "modulename": "nextrpg.frames", "kind": "module", "doc": "<p>Static frames, when played sequentially, become animated.</p>\n"}, {"fullname": "nextrpg.frames.FrameIndex", "modulename": "nextrpg.frames", "qualname": "FrameIndex", "kind": "variable", "doc": "<p>The zero-based index to point to a frame in a list of frames.</p>\n", "default_value": "int"}, {"fullname": "nextrpg.frames.FrameExhaustedOption", "modulename": "nextrpg.frames", "qualname": "FrameExhaustedOption", "kind": "class", "doc": "<p>Options for handling scenarios where frames are all played once/exhausted.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong><code>CYCLE</code>:</strong>  Cycles back to the first frame when frames are exhausted.</li>\n<li><strong><code>KEEP_LAST_FRAME</code>:</strong>  Maintains the last frame once all frames are used.</li>\n<li><strong><code>DISAPPEAR</code>:</strong>  Makes the sprite disappear when no frames are left.</li>\n</ul>\n", "bases": "enum.Enum"}, {"fullname": "nextrpg.frames.FrameExhaustedOption.CYCLE", "modulename": "nextrpg.frames", "qualname": "FrameExhaustedOption.CYCLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FrameExhaustedOption.CYCLE: 1&gt;"}, {"fullname": "nextrpg.frames.FrameExhaustedOption.KEEP_LAST_FRAME", "modulename": "nextrpg.frames", "qualname": "FrameExhaustedOption.KEEP_LAST_FRAME", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FrameExhaustedOption.KEEP_LAST_FRAME: 2&gt;"}, {"fullname": "nextrpg.frames.FrameExhaustedOption.DISAPPEAR", "modulename": "nextrpg.frames", "qualname": "FrameExhaustedOption.DISAPPEAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FrameExhaustedOption.DISAPPEAR: 3&gt;"}, {"fullname": "nextrpg.frames.Frames", "modulename": "nextrpg.frames", "qualname": "Frames", "kind": "class", "doc": "<p>This class holds A collection of frames to be iterated,\nand the behavior upon frame exhaustion.</p>\n"}, {"fullname": "nextrpg.frames.Frames.__init__", "modulename": "nextrpg.frames", "qualname": "Frames.__init__", "kind": "function", "doc": "<p>Initializes the object with frames, options for handling\nframe exhaustion, and optionally sequence of specific frame indices.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>frames</code>:</strong>  A list of Drawing objects representing the frames to work with.</li>\n<li><strong><code>frame_exhausted_option</code>:</strong>  Defines the behavior to apply when frames have been exhausted.</li>\n<li><p><strong><code>frame_indices</code>:</strong>  An optional list of <code>FrameIndex</code> specifying a sequence of frame\nindices to consume. If not provided, the full range of frames\nwill be played sequentially.</p>\n\n<p>For example, if <code>frame_indices == [2, 0, 1]</code>.\n<code>frames[2]</code> will be played first, followed by <code>frames[0]</code> and\n<code>frames[1]</code>.</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">frames</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">frame_exhausted_option</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">FrameExhaustedOption</span>,</span><span class=\"param\">\t<span class=\"n\">frame_indices</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">FrameIndex</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "nextrpg.frames.Frames.reset", "modulename": "nextrpg.frames", "qualname": "Frames.reset", "kind": "function", "doc": "<p>Resets the frame index to the beginning.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><code>None</code></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.frames.Frames.current_frame", "modulename": "nextrpg.frames", "qualname": "Frames.current_frame", "kind": "function", "doc": "<p>Returns the currently selected frame, if applicable.</p>\n\n<p>If the current frame index exists, the method retrieves the frame at the\ncorresponding position in the sequence. None if no index is set.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing | None</code>: The current frame if a valid index is set, or None\n      if no frame is selected.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.frames.Frames.next_frame", "modulename": "nextrpg.frames", "qualname": "Frames.next_frame", "kind": "function", "doc": "<p>Advances to the next frame in sequence and returns the current frame.</p>\n\n<p>This method triggers the frame exhaustion behavior\nif there are no more frames.\nIt will either cycle the frames, keep the last frame, or disappear.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>Drawing | None</code>: The frame after updating the frame index. If the\n      frames are exhausted and the option is set to disappear,\n      <code>None</code> is returned.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">Drawing</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene", "modulename": "nextrpg.scene", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.scene.map_scene", "modulename": "nextrpg.scene.map_scene", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "nextrpg.scene.map_scene.MapScene", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene", "kind": "class", "doc": "<p>Abstract base class representing a game scene.</p>\n\n<p>This class defines the interface for game scenes, providing methods for\nhandling events and drawing content on the screen. All game scenes must\nimplement these methods.</p>\n", "bases": "nextrpg.scene.scene.Scene"}, {"fullname": "nextrpg.scene.map_scene.MapScene.__init__", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tmx_map</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>,</span><span class=\"param\">\t<span class=\"n\">player_sprite</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">character</span><span class=\"o\">.</span><span class=\"n\">character_drawing</span><span class=\"o\">.</span><span class=\"n\">CharacterDrawing</span></span>)</span>"}, {"fullname": "nextrpg.scene.map_scene.MapScene.event", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.event", "kind": "function", "doc": "<p>Handles events for the scene.</p>\n\n<p>The recommended implementation is via <code>@singledispatchmethod</code>.\nAnd implement events of interesting <code>nextrpg.event.pygame_event</code> types.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyScene</span><span class=\"p\">(</span><span class=\"n\">Scene</span><span class=\"p\">):</span>\n    <span class=\"nd\">@singledispatchmethod</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">event</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">PygameEvent</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_down</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">KeyPressDown</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">KeyPressUp</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">GuiResize</span> <span class=\"o\">|</span> <span class=\"n\">Quit</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n</code></pre>\n</div>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>event</code>:</strong>  The pygame event to process</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.map_scene.MapScene.draw_on_screen", "modulename": "nextrpg.scene.map_scene", "qualname": "MapScene.draw_on_screen", "kind": "function", "doc": "<p>Generates the list of drawings to be rendered on screen.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  Time has elapsed since the last frame in milliseconds.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[DrawOnScreen]</code>: objects to be rendered</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">DrawOnScreen</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.scene", "modulename": "nextrpg.scene.scene", "kind": "module", "doc": "<p>Scene is an interface of all game interactions like exploration, menu, etc..</p>\n"}, {"fullname": "nextrpg.scene.scene.Scene", "modulename": "nextrpg.scene.scene", "qualname": "Scene", "kind": "class", "doc": "<p>Abstract base class representing a game scene.</p>\n\n<p>This class defines the interface for game scenes, providing methods for\nhandling events and drawing content on the screen. All game scenes must\nimplement these methods.</p>\n", "bases": "abc.ABC"}, {"fullname": "nextrpg.scene.scene.Scene.event", "modulename": "nextrpg.scene.scene", "qualname": "Scene.event", "kind": "function", "doc": "<p>Handles events for the scene.</p>\n\n<p>The recommended implementation is via <code>@singledispatchmethod</code>.\nAnd implement events of interesting <code>nextrpg.event.pygame_event</code> types.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyScene</span><span class=\"p\">(</span><span class=\"n\">Scene</span><span class=\"p\">):</span>\n    <span class=\"nd\">@singledispatchmethod</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">event</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">PygameEvent</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_down</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">KeyPressDown</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">KeyPressUp</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_on_key_press_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">GuiResize</span> <span class=\"o\">|</span> <span class=\"n\">Quit</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n</code></pre>\n</div>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>event</code>:</strong>  The pygame event to process</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pygame_event</span><span class=\"o\">.</span><span class=\"n\">PygameEvent</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.scene.scene.Scene.draw_on_screen", "modulename": "nextrpg.scene.scene", "qualname": "Scene.draw_on_screen", "kind": "function", "doc": "<p>Generates the list of drawings to be rendered on screen.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>time_delta</code>:</strong>  Time has elapsed since the last frame in milliseconds.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>list[DrawOnScreen]</code>: objects to be rendered</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time_delta</span><span class=\"p\">:</span> <span class=\"n\">Millisecond</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">draw_on_screen</span><span class=\"o\">.</span><span class=\"n\">DrawOnScreen</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.start_game", "modulename": "nextrpg.start_game", "kind": "module", "doc": "<p>Start the game window and game loop.</p>\n"}, {"fullname": "nextrpg.start_game.start_game", "modulename": "nextrpg.start_game", "qualname": "start_game", "kind": "function", "doc": "<p>Initializes and starts the game by handling the main game loop.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><p><strong><code>entry_scene</code>:</strong>  A callable that returns the initial scene\nto be displayed and interacted with when the game starts.</p>\n\n<p>This is a function because the scene that loads sprites must be\ncreated after pygame initialization.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>None</code>: when the game exits.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">entry_scene</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">nextrpg</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">scene</span><span class=\"o\">.</span><span class=\"n\">Scene</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.util", "modulename": "nextrpg.util", "kind": "module", "doc": "<p>Utilities.</p>\n"}, {"fullname": "nextrpg.util.assert_not_none", "modulename": "nextrpg.util", "qualname": "assert_not_none", "kind": "function", "doc": "<p>Assert that the provided argument is not <code>None</code> and returns it.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>x</code>:</strong>  The value to be checked.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The same value as provided in the argument, but never <code>None</code>. The result\n  retains the type of the input value.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong><code>AssertionError</code>:</strong>  If the provided argument is None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, {"fullname": "nextrpg.util.partition", "modulename": "nextrpg.util", "qualname": "partition", "kind": "function", "doc": "<p>Split an iterable into two parts based on a predicate function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong><code>iterable</code>:</strong>  The input iterable to be partitioned.</li>\n<li><strong><code>predicate</code>:</strong>  Function that takes an element and returns <code>True</code>/<code>False</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p><code>tuple[list[T], list[T]]</code>: A tuple containing two lists -\n      The first list contains elements for which predicate returns <code>True</code>.\n      The second contains elements for which predicate returns <code>False</code>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"n\">predicate</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">T</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();